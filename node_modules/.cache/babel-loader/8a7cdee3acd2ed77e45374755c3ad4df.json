{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrar khan Zargai\\\\Desktop\\\\NUML-BMS\\\\project\\\\BUS-API-Dashboard\\\\src\\\\pages\\\\dashboard\\\\drivers\\\\Drivers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Typography, Form, message } from \"antd\";\nimport DriverModal from \"./DriverModal\";\nimport DriverTable from \"./DriverTable\";\nimport { BusApi, DriverApi } from \"../../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Drivers() {\n  _s();\n\n  const [form] = Form.useForm();\n  const {\n    Title\n  } = Typography;\n  const [drivers, setDrivers] = useState([]);\n  const [buses, setBuses] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [editingKey, setEditingKey] = useState(\"\");\n  const [mounted, setMounted] = useState(true);\n  const [visible, setVisible] = useState(false);\n\n  const getDrivers = async () => {\n    try {\n      setloading(true);\n      const response = await DriverApi.getAll();\n      const newResponse = [...response.data].map(driver => {\n        const object = { ...driver,\n          key: driver._id\n        };\n        return object;\n      });\n      setDrivers(newResponse);\n      setloading(false);\n      console.log(\"newResponse\", response.data);\n      console.log(response.data);\n    } catch (error) {\n      message.error(error.message);\n      console.log(error.message);\n    }\n  };\n\n  const updateDriver = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...drivers];\n      const index = newData.findIndex(item => key === item.key); // console.log(name);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setEditingKey(\"\");\n        console.log(\"Newdata\", newData);\n        const {\n          name,\n          phone,\n          assignedBus\n        } = newData[index];\n        const response = await DriverApi.update(key, {\n          name,\n          phone,\n          assignedBus\n        });\n\n        if (response) {\n          setDisable(false);\n          message.success(\"Item updated\");\n          getDrivers();\n        }\n      } else {\n        newData.push(row);\n        setDrivers(newData);\n        setEditingKey(\"\");\n      }\n    } catch (error) {\n      setDisable(false);\n      message.error(error.message);\n      console.log(\"Validate Failed:\", error);\n    }\n  };\n\n  const deleteDriver = async key => {\n    try {\n      const newData = [...drivers];\n      const index = newData.findIndex(item => key === item.key);\n      const response = await DriverApi.delete(key);\n\n      if (response) {\n        getDrivers();\n        message.warning(\"Item deleted\");\n      }\n\n      newData.splice(index, 1);\n      setDrivers(newData);\n      setEditingKey(\"\");\n    } catch (error) {\n      message.error(error.message);\n      console.log(\"Validate Failed:\", error);\n    }\n  };\n\n  const submitDriver = async values => {\n    console.log(\"values submit\", values);\n\n    try {\n      const response = await DriverApi.create(values);\n      console.log(\"responce :\", response);\n\n      if (response) {\n        getDrivers();\n        message.success(\"Item Added\");\n      }\n\n      setDisable(false);\n      setVisible(false);\n    } catch (error) {\n      message.error(error.message);\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const response = async () => {\n      try {\n        const myBuses = await BusApi.getAll();\n        setBuses(myBuses.data);\n        getDrivers();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    response();\n    getDrivers();\n    return () => {\n      setMounted(false);\n    };\n  }, [setMounted]);\n  const data = drivers.map(driver => {\n    var _driver$assignedBus;\n\n    return {\n      _id: driver._id,\n      key: driver.key,\n      name: driver.name,\n      phone: driver.phone,\n      // photo: driver.photo,\n      assignedBus: (_driver$assignedBus = driver.assignedBus) === null || _driver$assignedBus === void 0 ? void 0 : _driver$assignedBus.name\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      children: \"Drivers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        float: \"right\",\n        marginBottom: \"10px\"\n      },\n      type: \"primary\",\n      disabled: disable,\n      onClick: () => {\n        setVisible(true);\n        setDisable(true);\n      },\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DriverTable, {\n      data: data,\n      loading: loading,\n      editingKey: editingKey,\n      setEditingKey: setEditingKey,\n      deleted: deleteDriver,\n      editSave: updateDriver,\n      form: form,\n      setDisable: setDisable,\n      buses: buses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DriverModal, {\n      visible: visible,\n      buses: buses,\n      onCreate: values => submitDriver(values),\n      onCancel: () => {\n        setVisible(false);\n        setDisable(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Drivers, \"jc/VYeXoSdjOTcyr9f6JxjEz3Xk=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Drivers;\nexport default Drivers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drivers\");","map":{"version":3,"sources":["C:/Users/Abrar khan Zargai/Desktop/NUML-BMS/project/BUS-API-Dashboard/src/pages/dashboard/drivers/Drivers.js"],"names":["React","useEffect","useState","Button","Typography","Form","message","DriverModal","DriverTable","BusApi","DriverApi","Drivers","form","useForm","Title","drivers","setDrivers","buses","setBuses","loading","setloading","disable","setDisable","editingKey","setEditingKey","mounted","setMounted","visible","setVisible","getDrivers","response","getAll","newResponse","data","map","driver","object","key","_id","console","log","error","updateDriver","row","validateFields","newData","index","findIndex","item","splice","name","phone","assignedBus","update","success","push","deleteDriver","delete","warning","submitDriver","values","create","myBuses","float","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Typography, Form, message } from \"antd\";\r\nimport DriverModal from \"./DriverModal\";\r\nimport DriverTable from \"./DriverTable\";\r\nimport { BusApi, DriverApi } from \"../../../services/api\";\r\nfunction Drivers() {\r\n  const [form] = Form.useForm();\r\n  const { Title } = Typography;\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [buses, setBuses] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [mounted, setMounted] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const getDrivers = async () => {\r\n    try {\r\n      setloading(true);\r\n      const response = await DriverApi.getAll();\r\n\r\n      const newResponse = [...response.data].map((driver) => {\r\n        const object = {\r\n          ...driver,\r\n          key: driver._id,\r\n        };\r\n        return object;\r\n      });\r\n\r\n      setDrivers(newResponse);\r\n      setloading(false);\r\n\r\n      console.log(\"newResponse\", response.data);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const updateDriver = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...drivers];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      // console.log(name);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setEditingKey(\"\");\r\n        console.log(\"Newdata\", newData);\r\n        const { name, phone, assignedBus } = newData[index];\r\n\r\n        const response = await DriverApi.update(key, {\r\n          name,\r\n          phone,\r\n          assignedBus,\r\n        });\r\n\r\n        if (response) {\r\n          setDisable(false);\r\n          message.success(\"Item updated\");\r\n          getDrivers();\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setDrivers(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (error) {\r\n      setDisable(false);\r\n      message.error(error.message);\r\n\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteDriver = async (key) => {\r\n    try {\r\n      const newData = [...drivers];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      const response = await DriverApi.delete(key);\r\n\r\n      if (response) {\r\n        getDrivers();\r\n        message.warning(\"Item deleted\");\r\n      }\r\n\r\n      newData.splice(index, 1);\r\n\r\n      setDrivers(newData);\r\n      setEditingKey(\"\");\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const submitDriver = async (values) => {\r\n    console.log(\"values submit\", values);\r\n    try {\r\n      const response = await DriverApi.create(values);\r\n  console.log(\"responce :\",response)\r\n      if (response) {\r\n        getDrivers();\r\n        message.success(\"Item Added\");\r\n      }\r\n      setDisable(false);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const response = async () => {\r\n      try {\r\n        const myBuses = await BusApi.getAll();\r\n\r\n        setBuses(myBuses.data);\r\n\r\n        getDrivers();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    response();\r\n    getDrivers();\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, [setMounted]);\r\n\r\n  const data = drivers.map((driver) => ({\r\n    _id: driver._id,\r\n    key: driver.key,\r\n    name: driver.name,\r\n    phone: driver.phone,\r\n    // photo: driver.photo,\r\n    assignedBus: driver.assignedBus?.name\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <Title level={2}>Drivers</Title>\r\n      <Button\r\n        style={{\r\n          float: \"right\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        type=\"primary\"\r\n        disabled={disable}\r\n        onClick={() => {\r\n          setVisible(true);\r\n          setDisable(true);\r\n        }}\r\n      >\r\n        Add Item\r\n      </Button>\r\n      {/* <Table bordered columns={columns} dataSource={drivers} /> */}\r\n\r\n      <DriverTable\r\n        data={data}\r\n        loading={loading}\r\n        editingKey={editingKey}\r\n        setEditingKey={setEditingKey}\r\n        deleted={deleteDriver}\r\n        editSave={updateDriver}\r\n        form={form}\r\n        setDisable={setDisable}\r\n        buses={buses}\r\n      />\r\n      <DriverModal\r\n        visible={visible}\r\n        buses={buses}\r\n        onCreate={(values) => submitDriver(values)}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n          setDisable(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Drivers;\r\n"]},"metadata":{},"sourceType":"module"}