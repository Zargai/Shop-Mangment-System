{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrar khan Zargai\\\\Desktop\\\\project\\\\BUS-API-Dashboard\\\\src\\\\pages\\\\dashboard\\\\routes\\\\RouteTable.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Input, Popconfirm, Form, Typography, Select, Col, Row, message } from \"antd\";\nimport { EditOutlined, DeleteOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\nimport { Option } from \"antd/lib/mentions\";\nimport { data } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === \"disabled\" ? /*#__PURE__*/_jsxDEV(Select, {\n    defaultValue: record.stops.map(stop => stop.disabled),\n    children: [/*#__PURE__*/_jsxDEV(Option, {\n      value: \"true\",\n      children: \"True\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"false\",\n      children: \"False\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: `Please Input ${title}!`\n      }],\n      children: inputNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableCell;\n\nconst RouteTable = ({\n  routes,\n  loading,\n  deleted,\n  editingKey,\n  setEditingKey,\n  editSave,\n  form,\n  setDisable\n}) => {\n  const {\n    Link\n  } = Typography;\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: \"\",\n      title: \"\",\n      disabled: \"\",\n      stops: [],\n      ...record\n    });\n    setEditingKey(record.key);\n    setDisable(true);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n    setDisable(false);\n  };\n\n  const columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    sorter: (a, b) => a.name.length - b.name.length,\n    editable: true\n  }, {\n    title: \"Start Point\",\n    dataIndex: \"startPoint\",\n    key: \"startPoint\",\n    editable: false,\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: record.stops.length > 0 ? record === null || record === void 0 ? void 0 : record.stops[0].title : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this);\n    }\n  }, {\n    title: \"End Point\",\n    dataIndex: \"endPoint\",\n    key: \"endPoint\",\n    editable: false,\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: record.stops.length > 0 ? record === null || record === void 0 ? void 0 : record.stops[record.stops.length - 1].title : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this);\n    }\n  }, {\n    title: \"Stops\",\n    dataIndex: \"id\",\n    key: \"stops\",\n    editable: false,\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          width: \"10vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: \"30vh\"\n            },\n            children: record.stops.map((rec, i) => {\n              return /*#__PURE__*/_jsxDEV(Option, {\n                value: rec.title,\n                children: rec.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: \"Actions\",\n    align: \"center\",\n    dataIndex: \"operation\",\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => editSave(record.key),\n          style: {\n            marginRight: 8\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n          style: editingKey !== \"\" ? {\n            display: \"none\"\n          } : {\n            color: \"blue\"\n          } // editingKey !== \"\"\n          ,\n          onClick: () => edit(record),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Are you sure\\uFF1F\",\n          okText: \"Yes\",\n          cancelText: \"No\",\n          onConfirm: () => deleted(record.key),\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            style: editingKey !== \"\" ? {\n              display: \"none\"\n            } : {\n              color: \"red\",\n              marginLeft: \"20px\"\n            },\n            disabled: editingKey !== \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 2\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === \"disabled\" ? \"disabled\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      loading: loading,\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      bordered: true,\n      dataSource: routes,\n      columns: mergedColumns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: cancel\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = RouteTable;\nexport default RouteTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"RouteTable\");","map":{"version":3,"sources":["C:/Users/Abrar khan Zargai/Desktop/project/BUS-API-Dashboard/src/pages/dashboard/routes/RouteTable.js"],"names":["React","useEffect","useState","Table","Input","Popconfirm","Form","Typography","Select","Col","Row","message","EditOutlined","DeleteOutlined","PlayCircleOutlined","Option","data","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","stops","map","stop","disabled","margin","required","RouteTable","routes","loading","deleted","editingKey","setEditingKey","editSave","form","setDisable","Link","isEditing","key","edit","setFieldsValue","name","cancel","columns","sorter","a","b","length","editable","render","_","width","rec","i","align","marginRight","display","color","marginLeft","mergedColumns","col","onCell","body","cell","onChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Select,\r\n  Col, Row,\r\n  message,\r\n} from \"antd\";\r\nimport { EditOutlined, DeleteOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\r\nimport { Option } from \"antd/lib/mentions\";\r\nimport { data } from \"./data\";\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode =\r\n    inputType === \"disabled\" ? (\r\n      <Select defaultValue={record.stops.map((stop) => stop.disabled)}>\r\n        <Option value=\"true\">True</Option>\r\n        <Option value=\"false\">False</Option>\r\n      </Select>\r\n    ) : (\r\n      <Input />\r\n    );\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst RouteTable = ({\r\n  routes,\r\n  loading,\r\n  deleted,\r\n  editingKey,\r\n  setEditingKey,\r\n  editSave,\r\n  form,\r\n  setDisable,\r\n}) => {\r\n  const { Link } = Typography;\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      title: \"\",\r\n      disabled: \"\",\r\n      stops: [],\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n    setDisable(true);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Start Point\",\r\n      dataIndex: \"startPoint\",\r\n      key: \"startPoint\",\r\n      editable: false,\r\n      render: (_, record) =>{\r\n       return <span>\r\n          {record.stops.length >0 ? record?.stops[0].title : ''}\r\n        </span>\r\n      }\r\n    },\r\n    {\r\n      title: \"End Point\",\r\n      dataIndex: \"endPoint\",\r\n      key: \"endPoint\",\r\n      editable: false,\r\n      render: (_, record) =>{\r\n       return <span>\r\n          {record.stops.length >0 ? record?.stops[record.stops.length -1].title : ''}\r\n        </span>\r\n      }\r\n    },\r\n\r\n    {\r\n      title: \"Stops\",\r\n      dataIndex: \"id\",\r\n      key: \"stops\",\r\n      editable: false,\r\n      render: (_, record) => {\r\n        return (\r\n          <Row style={{width:\"10vh\"}}>\r\n            <Col span={12}>\r\n          <Select style={{width:\"30vh\"}}>\r\n            {record.stops.map((rec, i) => {\r\n              return <Option value={rec.title}>{rec.title}</Option>;\r\n            })}\r\n          </Select>\r\n          </Col>\r\n          </Row>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Actions\",\r\n      align: \"center\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Link\r\n              onClick={() => editSave(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </Link>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Link>Cancel</Link>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <EditOutlined\r\n              style={\r\n                editingKey !== \"\"\r\n                  ? {\r\n                      display: \"none\",\r\n                    }\r\n                  : {\r\n                      color: \"blue\",\r\n                    }\r\n              }\r\n              // editingKey !== \"\"\r\n              onClick={() => edit(record)}\r\n            >\r\n              Edit\r\n            </EditOutlined>\r\n            <Popconfirm\r\n              title=\"Are you sure？\"\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n              onConfirm={() => deleted(record.key)}\r\n            >\r\n              {/* <PlayCircleOutlined\r\n                style={\r\n                  editingKey !== \"\"\r\n                    ? {\r\n                        display: \"none\",\r\n                      }\r\n                    : {\r\n                        color: \"green\",\r\n                        marginLeft: \"24px\",\r\n                      }\r\n                }\r\n                disabled={editingKey !== \"\"}\r\n              /> */}\r\n <DeleteOutlined\r\n                style={\r\n                  editingKey !== \"\"\r\n                    ? {\r\n                        display: \"none\",\r\n                      }\r\n                    : {\r\n                        color: \"red\",\r\n                        marginLeft: \"20px\",\r\n                      }\r\n                }\r\n                disabled={editingKey !== \"\"}\r\n              />\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"disabled\" ? \"disabled\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        loading={loading}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={routes}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default RouteTable;\r\n"]},"metadata":{},"sourceType":"module"}