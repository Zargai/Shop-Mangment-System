{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrar khan Zargai\\\\Desktop\\\\NUML-BMS\\\\project\\\\BUS-API-Dashboard\\\\src\\\\pages\\\\dashboard\\\\drivers\\\\DriverTable.js\";\nimport React from \"react\";\nimport { Table, Input, Popconfirm, Form, Typography, Select } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType;\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: `Please Input ${title}!`\n      }],\n      children: inputNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableCell;\n\nconst DriverTable = ({\n  data,\n  buses,\n  loading,\n  deleted,\n  editingKey,\n  setEditingKey,\n  editSave,\n  form,\n  setDisable\n}) => {\n  const {\n    Link\n  } = Typography;\n  const {\n    Option\n  } = Select;\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: \"\",\n      phone: \"\",\n      ...record\n    });\n    setEditingKey(record.key);\n    setDisable(true);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n    setDisable(false);\n  };\n\n  const columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    editable: true,\n    sorter: (a, b) => a.name.length - b.name.length\n  }, {\n    title: \"Phone\",\n    dataIndex: \"phone\",\n    key: \"phone\",\n    editable: true,\n    sorter: (a, b) => a.phone.length - b.phone.length\n  }, {\n    title: \"AssignedBus\",\n    dataIndex: \"assignedBus\",\n    key: \"assignedBus\",\n    editable: false,\n    render: (_, record) => {\n      return record.assignedBus;\n    }\n  }, {\n    title: \"Actions\",\n    align: \"center\",\n    dataIndex: \"operation\",\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => editSave(record.key),\n          style: {\n            marginRight: 8\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n          style: editingKey !== \"\" ? {\n            display: \"none\"\n          } : {\n            color: \"blue\"\n          } // editingKey !== \"\"\n          ,\n          onClick: () => edit(record),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Are you sure\\uFF1F\",\n          okText: \"Yes\" // onConfirm={}\n          ,\n          cancelText: \"No\",\n          onConfirm: () => deleted(record.key),\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            style: editingKey !== \"\" ? {\n              display: \"none\"\n            } : {\n              color: \"red\",\n              marginLeft: \"20px\"\n            },\n            disabled: editingKey !== \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record: data,\n        inputType: col.dataIndex === \"assignedBus\" ? /*#__PURE__*/_jsxDEV(Select, {\n          showSearch: true,\n          style: {\n            width: 200\n          },\n          placeholder: \"Select a Bus\",\n          filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n          children: buses.map((bus, i) => {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: bus._id,\n              children: bus.name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this),\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      loading: loading,\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      bordered: true,\n      dataSource: data,\n      columns: mergedColumns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: cancel\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = DriverTable;\nexport default DriverTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"DriverTable\");","map":{"version":3,"sources":["C:/Users/Abrar khan Zargai/Desktop/NUML-BMS/project/BUS-API-Dashboard/src/pages/dashboard/drivers/DriverTable.js"],"names":["React","Table","Input","Popconfirm","Form","Typography","Select","EditOutlined","DeleteOutlined","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","DriverTable","data","buses","loading","deleted","editingKey","setEditingKey","editSave","form","setDisable","Link","Option","isEditing","key","edit","setFieldsValue","name","phone","cancel","columns","editable","sorter","a","b","length","render","_","assignedBus","align","marginRight","display","color","marginLeft","mergedColumns","map","col","onCell","width","input","option","toLowerCase","indexOf","bus","i","_id","body","cell","onChange"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Table, Input, Popconfirm, Form, Typography, Select } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst DriverTable = ({\r\n  data,\r\n  buses,\r\n  loading,\r\n  deleted,\r\n  editingKey,\r\n  setEditingKey,\r\n  editSave,\r\n  form,\r\n  setDisable,\r\n}) => {\r\n  const { Link } = Typography;\r\n  const { Option } = Select;\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      phone: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n    setDisable(true);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      editable: true,\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"phone\",\r\n      key: \"phone\",\r\n      editable: true,\r\n      sorter: (a, b) => a.phone.length - b.phone.length,\r\n\r\n    },\r\n    {\r\n      title: \"AssignedBus\",\r\n      dataIndex: \"assignedBus\",\r\n      key: \"assignedBus\",\r\n      editable: false,\r\n      render: (_, record) => {\r\n        return record.assignedBus;\r\n      },\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      align: \"center\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Link\r\n              onClick={() => editSave(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </Link>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Link>Cancel</Link>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <EditOutlined\r\n              style={\r\n                editingKey !== \"\"\r\n                  ? {\r\n                      display: \"none\",\r\n                    }\r\n                  : {\r\n                      color: \"blue\",\r\n                    }\r\n              }\r\n              // editingKey !== \"\"\r\n              onClick={() => edit(record)}\r\n            >\r\n              Edit\r\n            </EditOutlined>\r\n            <Popconfirm\r\n              title=\"Are you sure？\"\r\n              okText=\"Yes\"\r\n              // onConfirm={}\r\n              cancelText=\"No\"\r\n              onConfirm={() => deleted(record.key)}\r\n            >\r\n              <DeleteOutlined\r\n                style={\r\n                  editingKey !== \"\"\r\n                    ? {\r\n                        display: \"none\",\r\n                      }\r\n                    : {\r\n                        color: \"red\",\r\n                        marginLeft: \"20px\",\r\n                      }\r\n                }\r\n                disabled={editingKey !== \"\"}\r\n              />\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record: data,\r\n        inputType:\r\n          col.dataIndex === \"assignedBus\" ? (\r\n            <Select\r\n              showSearch\r\n              style={{ width: 200 }}\r\n              placeholder=\"Select a Bus\"\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {buses.map((bus, i) => {\r\n                return (\r\n                  <Option key={i} value={bus._id}>\r\n                    {bus.name}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          ) : (\r\n            <Input />\r\n          ),\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        loading={loading}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default DriverTable;\r\n"]},"metadata":{},"sourceType":"module"}