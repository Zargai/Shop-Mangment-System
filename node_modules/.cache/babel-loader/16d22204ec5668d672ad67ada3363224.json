{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrar khan Zargai\\\\Desktop\\\\NUML-BMS\\\\project\\\\BUS-API-Dashboard\\\\src\\\\pages\\\\dashboard\\\\routes\\\\Routes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Typography, Form, message } from \"antd\";\nimport RouteModal from \"./RouteModal\";\nimport { RouteApi } from \"../../../services/api\";\nimport RouteTable from \"./RouteTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Routes() {\n  _s();\n\n  const [form] = Form.useForm();\n  const {\n    Title\n  } = Typography;\n  const [routes, setRoutes] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [editingKey, setEditingKey] = useState(\"\");\n  const [mounted, setMounted] = useState(true);\n  const [visible, setVisible] = useState(false);\n  const [markers, setMarkers] = useState({\n    stops: [],\n    title: ''\n  });\n\n  const getRoutes = async () => {\n    try {\n      setloading(true);\n      const response = await RouteApi.getAll();\n      console.log(\"response\", response);\n      const newResponse = [...response.data].map(route => {\n        const object = { ...route,\n          key: route._id\n        };\n        return object;\n      });\n      console.log(\"newResponse\");\n      setRoutes(newResponse);\n      setloading(false);\n      console.log(response.data);\n    } catch (error) {\n      message.error(error.message);\n      console.log(error.message);\n    }\n  };\n\n  const updateRoute = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...routes];\n      const index = newData.findIndex(item => key === item.key); // console.log(name);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setEditingKey(\"\");\n        const {\n          name,\n          stops: {\n            title\n          }\n        } = newData[index];\n        const response = await RouteApi.update(key, {\n          name,\n          title\n        });\n\n        if (response) {\n          getRoutes();\n          setDisable(false);\n          message.success(\"Item updated\");\n        }\n      } else {\n        newData.push(row);\n        setRoutes(newData);\n        setEditingKey(\"\");\n      }\n    } catch (error) {\n      setDisable(false);\n      message.error(\"Email already exist\");\n      console.log(\"Validate Failed:\", error);\n    }\n  };\n\n  const deleteRoute = async key => {\n    try {\n      const newData = [...routes];\n      const index = newData.findIndex(item => key === item.key);\n      const response = await RouteApi.delete(key);\n\n      if (response) {\n        getRoutes();\n        message.warning(\"Item deleted\");\n      }\n\n      newData.splice(index, 1);\n      setRoutes(newData);\n      setEditingKey(\"\");\n    } catch (error) {\n      message.error(error.message);\n      console.log(\"Validate Failed:\", error);\n    }\n  };\n\n  const submitRoute = async values => {\n    // const newArray = {\n    //   ...values,\n    //   stops: [...markers],\n    // };\n    const newArray = values;\n    console.log(\"newArray\", newArray);\n\n    try {\n      const response = await RouteApi.create(newArray);\n\n      if (response) {\n        getRoutes();\n        message.success(\"Item Added\");\n      }\n\n      setDisable(false);\n      setVisible(false);\n    } catch (error) {\n      message.error(error.message);\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (mounted === true) {\n      getRoutes();\n    }\n\n    return () => {\n      setMounted(false);\n    };\n  }, [setMounted]);\n  const data = [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      children: \"Routes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        float: \"right\",\n        marginBottom: \"10px\"\n      },\n      type: \"primary\",\n      disabled: disable,\n      onClick: () => {\n        setVisible(true);\n        setDisable(true);\n      },\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RouteTable, {\n      routes: routes || [],\n      loading: loading,\n      editingKey: editingKey,\n      setEditingKey: setEditingKey,\n      deleted: deleteRoute,\n      editSave: updateRoute,\n      form: form,\n      setDisable: setDisable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RouteModal, {\n      visible: visible,\n      markers: markers,\n      width: 1000,\n      setMarkers: setMarkers,\n      onCreate: values => {\n        console.log(\"Success:\", values);\n        return submitRoute(values);\n      },\n      onCancel: () => {\n        setVisible(false);\n        setDisable(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Routes, \"TcPfpU6sIE2y6vPFTwF8T9u9sRk=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Routes;\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["C:/Users/Abrar khan Zargai/Desktop/NUML-BMS/project/BUS-API-Dashboard/src/pages/dashboard/routes/Routes.js"],"names":["React","useEffect","useState","Button","Typography","Form","message","RouteModal","RouteApi","RouteTable","Routes","form","useForm","Title","routes","setRoutes","loading","setloading","disable","setDisable","editingKey","setEditingKey","mounted","setMounted","visible","setVisible","markers","setMarkers","stops","title","getRoutes","response","getAll","console","log","newResponse","data","map","route","object","key","_id","error","updateRoute","row","validateFields","newData","index","findIndex","item","splice","name","update","success","push","deleteRoute","delete","warning","submitRoute","values","newArray","create","float","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Typography, Form, message } from \"antd\";\r\nimport RouteModal from \"./RouteModal\";\r\nimport { RouteApi } from \"../../../services/api\";\r\nimport RouteTable from \"./RouteTable\";\r\nfunction Routes() {\r\n  const [form] = Form.useForm();\r\n  const { Title } = Typography;\r\n  const [routes, setRoutes] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [mounted, setMounted] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n  const [markers, setMarkers] = useState({\r\n    stops:[],\r\n    title:''\r\n  });\r\n\r\n  const getRoutes = async () => {\r\n    try {\r\n      setloading(true);\r\n      const response = await RouteApi.getAll();\r\n\r\n      console.log(\"response\", response);\r\n\r\n      const newResponse = [...response.data].map((route) => {\r\n        const object = {\r\n          ...route,\r\n          key: route._id,\r\n        };\r\n        return object;\r\n      });\r\n\r\n      console.log(\"newResponse\");\r\n\r\n      setRoutes(newResponse);\r\n      setloading(false);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const updateRoute = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...routes];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      // console.log(name);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setEditingKey(\"\");\r\n\r\n        const {\r\n          name,\r\n          stops: { title },\r\n        } = newData[index];\r\n\r\n        const response = await RouteApi.update(key, {\r\n          name,\r\n          title,\r\n        });\r\n\r\n        if (response) {\r\n          getRoutes();\r\n          setDisable(false);\r\n          message.success(\"Item updated\");\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setRoutes(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (error) {\r\n      setDisable(false);\r\n      message.error(\"Email already exist\");\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteRoute = async (key) => {\r\n    try {\r\n      const newData = [...routes];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      const response = await RouteApi.delete(key);\r\n\r\n      if (response) {\r\n        getRoutes();\r\n        message.warning(\"Item deleted\");\r\n      }\r\n\r\n      newData.splice(index, 1);\r\n\r\n      setRoutes(newData);\r\n      setEditingKey(\"\");\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const submitRoute = async (values) => {\r\n    // const newArray = {\r\n    //   ...values,\r\n    //   stops: [...markers],\r\n    // };\r\n    const newArray = values;\r\n    console.log(\"newArray\", newArray);\r\n    try {\r\n      const response = await RouteApi.create(newArray);\r\n\r\n      if (response) {\r\n        getRoutes();\r\n        message.success(\"Item Added\");\r\n      }\r\n      setDisable(false);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (mounted === true) {\r\n      getRoutes();\r\n    }\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, [setMounted]);\r\n\r\n  const data = [];\r\n\r\n  return (\r\n    <div>\r\n      <Title level={2}>Routes</Title>\r\n      <Button\r\n        style={{\r\n          float: \"right\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        type=\"primary\"\r\n        disabled={disable}\r\n        onClick={() => {\r\n          setVisible(true);\r\n          setDisable(true);\r\n        }}\r\n      >\r\n        Add Item\r\n      </Button>\r\n      {/* <Table bordered columns={columns} dataSource={routes} /> */}\r\n\r\n      <RouteTable\r\n        routes={routes || []}\r\n        loading={loading}\r\n        editingKey={editingKey}\r\n        setEditingKey={setEditingKey}\r\n        deleted={deleteRoute}\r\n        editSave={updateRoute}\r\n        form={form}\r\n        setDisable={setDisable}\r\n      />\r\n      <RouteModal\r\n        visible={visible}\r\n        markers={markers}\r\n        width={1000}\r\n        setMarkers={setMarkers}\r\n        onCreate={(values) => {\r\n          console.log(\"Success:\", values);\r\n\r\n          return submitRoute(values);\r\n        }}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n          setDisable(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Routes;\r\n"]},"metadata":{},"sourceType":"module"}