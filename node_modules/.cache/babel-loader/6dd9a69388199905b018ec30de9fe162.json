{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrar khan Zargai\\\\Desktop\\\\NUML-BMS\\\\project\\\\BUS-API-Dashboard\\\\src\\\\pages\\\\dashboard\\\\buses\\\\BusTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Table, Input, Popconfirm, Form, Typography, Select } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditableCell = ({\n  editing,\n  rotues,\n  drivers,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType;\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          padding: \"10px 0px\",\n          fontWeight: \"bolder\",\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          color: 'white'\n        },\n        children: \"Buses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: dataIndex,\n        style: {\n          margin: 0\n        },\n        rules: [{\n          required: true,\n          message: `Please Input ${title}!`\n        }],\n        children: inputNode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableCell;\n\nconst BusTable = ({\n  data,\n  routes,\n  drivers,\n  loading,\n  deleted,\n  editingKey,\n  setEditingKey,\n  editSave,\n  form,\n  setDisable\n}) => {\n  _s();\n\n  const {\n    Link\n  } = Typography;\n  const {\n    Option\n  } = Select;\n  const [ID, setID] = useState(\"\");\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: \"\",\n      capacity: Number,\n      assignedRoute: {},\n      assignedDriver: {},\n      ...record\n    });\n    setEditingKey(record.key);\n    setDisable(true);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n    setDisable(false);\n  };\n\n  const columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    editable: true,\n    sorter: (a, b) => a.name.length - b.name.length\n  }, {\n    title: \"Capacity\",\n    dataIndex: \"capacity\",\n    key: \"capacity\",\n    editable: true,\n    sorter: (a, b) => a.capacity - b.capacity\n  }, {\n    title: \"AssignedRoute\",\n    dataIndex: \"assignedRoute\",\n    key: \"assignedRoute\",\n    editable: true,\n    sorter: (a, b) => a.assignedRoute.length - b.assignedRoute.length,\n    render: (_, record) => {\n      return record.assignedRoute_ID;\n    }\n  }, {\n    title: \"AssignedDriver\",\n    dataIndex: \"assignedDriver\",\n    key: \"assignedDriver\",\n    editable: true,\n    render: (_, record) => {\n      return record.assignedDriver_ID;\n    }\n  }, {\n    title: \"Actions\",\n    align: \"center\",\n    dataIndex: \"operation\",\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => editSave(record.key),\n          style: {\n            marginRight: 8\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n          style: editingKey !== \"\" ? {\n            display: \"none\"\n          } : {\n            color: \"blue\"\n          },\n          onClick: () => edit(record),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Are you sure\\uFF1F\",\n          okText: \"Yes\" // onConfirm={}\n          ,\n          cancelText: \"No\",\n          onConfirm: () => deleted(record.key),\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            style: editingKey !== \"\" ? {\n              display: \"none\"\n            } : {\n              color: \"red\",\n              marginLeft: \"20px\"\n            },\n            disabled: editingKey !== \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => {\n        return {\n          record: data,\n          inputType: col.dataIndex === \"assignedDriver\" ? /*#__PURE__*/_jsxDEV(Select, {\n            showSearch: true,\n            style: {\n              width: 200\n            },\n            placeholder: \"Select a Driver\",\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            children: drivers.map((driver, i) => {\n              setID(driver._id);\n              return /*#__PURE__*/_jsxDEV(Option, {\n                value: driver._id,\n                children: driver.name\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this) : col.dataIndex === \"assignedRoute\" ? /*#__PURE__*/_jsxDEV(Select, {\n            showSearch: true,\n            style: {\n              width: 200\n            },\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            children: routes.map((route, i) => {\n              return /*#__PURE__*/_jsxDEV(Option, {\n                value: route._id,\n                children: route.name\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this),\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: isEditing(record)\n        };\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      loading: loading,\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      bordered: true,\n      dataSource: data,\n      columns: mergedColumns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: cancel\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BusTable, \"ZbcOYNt8gOIW/a0fp5jyayyJlrY=\");\n\n_c2 = BusTable;\nexport default BusTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"BusTable\");","map":{"version":3,"sources":["C:/Users/Abrar khan Zargai/Desktop/NUML-BMS/project/BUS-API-Dashboard/src/pages/dashboard/buses/BusTable.js"],"names":["React","useState","Table","Input","Popconfirm","Form","Typography","Select","EditOutlined","DeleteOutlined","EditableCell","editing","rotues","drivers","dataIndex","title","inputType","record","index","children","restProps","inputNode","padding","fontWeight","backgroundColor","color","margin","required","message","BusTable","data","routes","loading","deleted","editingKey","setEditingKey","editSave","form","setDisable","Link","Option","ID","setID","isEditing","key","edit","setFieldsValue","name","capacity","Number","assignedRoute","assignedDriver","cancel","columns","editable","sorter","a","b","length","render","_","assignedRoute_ID","assignedDriver_ID","align","marginRight","display","marginLeft","mergedColumns","map","col","onCell","width","input","option","toLowerCase","indexOf","driver","i","_id","route","body","cell","onChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Table, Input, Popconfirm, Form, Typography, Select } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  rotues,\r\n  drivers,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <div>\r\n<h1 style={{padding:\"10px 0px\",fontWeight:\"bolder\", backgroundColor:'rgba(0, 0, 0, 0.7)',color:'white'}}>\r\n        Buses</h1>\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n        </div>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst BusTable = ({\r\n  data,\r\n  routes,\r\n  drivers,\r\n  loading,\r\n  deleted,\r\n  editingKey,\r\n  setEditingKey,\r\n  editSave,\r\n  form,\r\n  setDisable,\r\n}) => {\r\n  const { Link } = Typography;\r\n  const { Option } = Select;\r\n  const [ID, setID] = useState(\"\");\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      capacity: Number,\r\n      assignedRoute: {},\r\n      assignedDriver: {},\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n    setDisable(true);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      editable: true,\r\n      sorter: (a, b) => a.name.length - b.name.length\r\n\r\n    },\r\n    {\r\n      title: \"Capacity\",\r\n      dataIndex: \"capacity\",\r\n      key: \"capacity\",\r\n      editable: true,\r\n      sorter: (a, b) => a.capacity - b.capacity\r\n\r\n    },\r\n    {\r\n      title: \"AssignedRoute\",\r\n      dataIndex: \"assignedRoute\",\r\n      key: \"assignedRoute\",\r\n      editable: true,\r\n      sorter: (a, b) => a.assignedRoute.length - b.assignedRoute.length,\r\n      render: (_, record) => {\r\n        return record.assignedRoute_ID;\r\n      },\r\n    },\r\n    {\r\n      title: \"AssignedDriver\",\r\n      dataIndex: \"assignedDriver\",\r\n      key: \"assignedDriver\",\r\n      editable: true,\r\n      render: (_, record) => {\r\n        return record.assignedDriver_ID;\r\n      },\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      align: \"center\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Link\r\n              onClick={() => editSave(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </Link>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Link>Cancel</Link>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <EditOutlined\r\n              style={\r\n                editingKey !== \"\"\r\n                  ? {\r\n                      display: \"none\",\r\n                    }\r\n                  : {\r\n                      color: \"blue\",\r\n                    }\r\n              }\r\n              onClick={() => edit(record)}\r\n            >\r\n              Edit\r\n            </EditOutlined>\r\n            <Popconfirm\r\n              title=\"Are you sure？\"\r\n              okText=\"Yes\"\r\n              // onConfirm={}\r\n              cancelText=\"No\"\r\n              onConfirm={() => deleted(record.key)}\r\n            >\r\n              <DeleteOutlined\r\n                style={\r\n                  editingKey !== \"\"\r\n                    ? {\r\n                        display: \"none\",\r\n                      }\r\n                    : {\r\n                        color: \"red\",\r\n                        marginLeft: \"20px\",\r\n                      }\r\n                }\r\n                disabled={editingKey !== \"\"}\r\n              />\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n    return {\r\n      ...col,\r\n      onCell: (record) => {\r\n        return {\r\n          record: data,\r\n          inputType:\r\n            col.dataIndex === \"assignedDriver\" ? (\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select a Driver\"\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n              >\r\n                {drivers.map((driver, i) => {\r\n                  setID(driver._id);\r\n                  return (\r\n                    <Option key={i} value={driver._id}>\r\n                      {driver.name}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            ) : col.dataIndex === \"assignedRoute\" ? (\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n              >\r\n                {routes.map((route, i) => {\r\n                  return (\r\n                    <Option key={i} value={route._id}>\r\n                      {route.name}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            ) : (\r\n              <Input />\r\n            ),\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: isEditing(record),\r\n        };\r\n      },\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        loading={loading}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default BusTable;\r\n"]},"metadata":{},"sourceType":"module"}