{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrar khan Zargai\\\\Desktop\\\\NUML-BMS\\\\project\\\\BUS-API-Dashboard\\\\src\\\\pages\\\\StudentRegister.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button, Typography, Radio, Upload, Table, Select, message, Spin, Row, Col, Divider, InputNumber } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport numl from '../numl.jpg';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { DepartmentApi, BusApi, StudentApi, RouteApi, DriverApi } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst propertiesUpload = {\n  name: 'myFile',\n  action: 'http://localhost:8080/api/auth/upload',\n  headers: {\n    authorization: 'authorization-text'\n  }\n};\n\nfunction StudentRegister() {\n  _s();\n\n  const {\n    Title\n  } = Typography;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [buses, setBuses] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [slipPhoto, SetSlipPhoto] = useState();\n  const [mounted, setMounted] = useState(true); // const [mounted, setMounted] = useState(true);\n  // const [departments, setDepartments] = useState([]);\n  // const [form] = Form.useForm();\n\n  const columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    editable: true,\n    sorter: (a, b) => a.name.length - b.name.length\n  }, {\n    title: \"Capacity\",\n    dataIndex: \"capacity\",\n    key: \"capacity\",\n    editable: true,\n    sorter: (a, b) => a.capacity - b.capacity\n  }, {\n    title: \"AssignedRoute\",\n    dataIndex: \"assignedRoute\",\n    key: \"assignedRoute\",\n    editable: true,\n    sorter: (a, b) => a.assignedRoute.length - b.assignedRoute.length,\n    render: (_, record) => {\n      return record.assignedRoute.name;\n    }\n  }, {\n    title: \"AssignedDriver\",\n    dataIndex: \"assignedDriver\",\n    key: \"assignedDriver\",\n    editable: true,\n    render: (_, record) => {\n      return record.assignedDriver.name;\n    }\n  }];\n  const columnsRoute = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    sorter: (a, b) => a.name.length - b.name.length,\n    editable: true\n  }, {\n    title: \"Start Point\",\n    dataIndex: \"startPoint\",\n    key: \"startPoint\",\n    editable: false,\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: record.stops.length > 0 ? record === null || record === void 0 ? void 0 : record.stops[0].title : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this);\n    }\n  }, {\n    title: \"End Point\",\n    dataIndex: \"endPoint\",\n    key: \"endPoint\",\n    editable: false,\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: record.stops.length > 0 ? record === null || record === void 0 ? void 0 : record.stops[record.stops.length - 1].title : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this);\n    }\n  }];\n\n  const getBuses = async () => {\n    try {\n      setLoading(true);\n      const response = await BusApi.getAll();\n      const newResponse = [...response.data].map(bus => {\n        const object = { ...bus,\n          key: bus._id\n        };\n        return object;\n      });\n      setBuses(newResponse);\n      setLoading(false);\n      console.log(\"Response:\", newResponse);\n      console.log(\"BUSES\", buses);\n    } catch (error) {\n      console.log(error.message);\n      message.error(error.message);\n    }\n  };\n\n  const getRoutes = async () => {\n    try {\n      setLoading(true);\n      const response = await RouteApi.getAll();\n      console.log(\"response\", response);\n      const newResponse = [...response.data].map(route => {\n        const object = { ...route,\n          key: route._id\n        };\n        return object;\n      });\n      console.log(\"newResponse\");\n      setRoutes(newResponse);\n      setLoading(false);\n      console.log(response.data);\n    } catch (error) {\n      message.error(error.message);\n      console.log(error.message);\n    }\n  };\n\n  const handleChange = e => {\n    console.log('change', e);\n\n    if (e.file.status == 'done') {\n      // set the file url \n      alert('uploaded file');\n      let imgUrl = e.file.response.file;\n      console.log('use', imgUrl);\n\n      if (imgUrl) {\n        SetSlipPhoto(imgUrl);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const response = async () => {\n      try {\n        const myBuses = await BusApi.getAll();\n        const myRoutes = await RouteApi.getAll();\n        setBuses(myBuses.data);\n        setRoutes(myRoutes.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    response();\n    getBuses();\n    return () => {\n      setMounted(false);\n    };\n  }, [setMounted]); // useEffect(() => {\n  // const response = async () => {\n  //   try {\n  //     const myDepartments = await DepartmentApi.getAll();\n  //     setDepartments(myDepartments.data);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  // if (mounted === true) {\n  // }\n  // response();\n  // return () => {\n  //   setMounted(false);\n  // };\n  // }, [setMounted]);\n\n  const onFinish = async values => {\n    if (values.password !== values.c_password) {\n      message.error(\"passwords do not match\");\n    } else {\n      try {\n        setLoading(true);\n        delete values.c_password;\n        console.log('final-val', values);\n        const response = await StudentApi.create(values);\n        console.log(\"Success\", response.data);\n\n        if (response) {\n          // localStorage.setItem(\"token\", response.data.token);\n          // localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n          // setIsLoggedIn(true);\n          message.success(\"Account Created\");\n          message.success(\"Logged in!\");\n          setLoading(false);\n        }\n      } catch (error) {\n        console.log(error);\n        message.error(\"Email already exists\");\n        setLoading(false);\n      }\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\",\n      style: {\n        position: \"absolute\",\n        top: \"47%\",\n        right: \"50%\",\n        transform: \"translate(0, -50%)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url(${numl})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        height: \"150vh\",\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundAttachment: \"fixed\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container reg-div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-7 col-8 student_registration m-auto \",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"admin_Login_title\",\n              children: [\"Student \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 53\n              }, this), \"Registeration Form \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              name: \"basic\",\n              style: {\n                marginTop: \"20px\",\n                width: \"400px\",\n                margin: \"0px auto\",\n                textAlign: \"center\"\n              },\n              initialValues: {\n                remember: true\n              },\n              onFinish: onFinish,\n              onFinishFailed: onFinishFailed,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"white\",\n                  marginLeft: \"70px\",\n                  float: \"left\",\n                  fontSize: \"18px\"\n                },\n                children: \"Full Name :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                style: {\n                  width: \"300px\",\n                  marginLeft: \"60px\",\n                  color: \"white\"\n                },\n                name: \"name\",\n                rules: [{\n                  required: true,\n                  message: \"Please input your Name!\",\n                  asyncValidator: (rule, value) => {\n                    return new Promise((resolve, reject) => {\n                      if (!value.match(/^[A-Za-z]+$/)) {\n                        reject('Please enter your valid Name'); // reject with error message\n                      } else {\n                        resolve();\n                      }\n                    });\n                  }\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"white\",\n                  marginLeft: \"70px\",\n                  float: \"left\",\n                  fontSize: \"18px\"\n                },\n                children: \"System ID :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                style: {\n                  width: \"300px\",\n                  marginLeft: \"60px\",\n                  color: \"white\"\n                },\n                name: \"systemId\",\n                rules: [{\n                  required: true,\n                  message: \"System ID must be in formte of NUML-FXX-XXXXX!\",\n                  asyncValidator: (rule, value) => {\n                    return new Promise((resolve, reject) => {\n                      if (!value.match(/[N/n][U/u][M/m][L/l]-([A-Za-z])[0-9]{2}-[0-9]{2}/)) {\n                        reject('Enter valid system ID'); // reject with error message\n                      } else {\n                        resolve();\n                      }\n                    });\n                  }\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"white\",\n                  marginLeft: \"70px\",\n                  float: \"left\",\n                  fontSize: \"18px\"\n                },\n                children: \"Gender :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"sex\",\n                initialValue: \"Male\",\n                rules: [{\n                  required: true,\n                  message: \"Please select your Gender\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Radio, {\n                    value: \"Male\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"white\"\n                      },\n                      children: \"Male\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                    value: \"Female\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"white\"\n                      },\n                      children: \"Male\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"white\",\n                  marginLeft: \"70px\",\n                  float: \"left\",\n                  fontSize: \"18px\"\n                },\n                children: \"Phone Number :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                style: {\n                  width: \"300px\",\n                  marginLeft: \"60px\",\n                  color: \"white\"\n                },\n                name: \"phone\",\n                rules: [{\n                  required: true,\n                  message: \"Number Must be in format of 03XX-XXXXXXX!\",\n                  asyncValidator: (rule, value) => {\n                    return new Promise((resolve, reject) => {\n                      if (!value.match(/03[0-9]{2}-[0-9]{7}/)) {\n                        reject('Please enter your valid Name'); // reject with error message\n                      } else {\n                        resolve();\n                      }\n                    });\n                  }\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"white\",\n                  marginLeft: \"70px\",\n                  float: \"left\",\n                  fontSize: \"18px\"\n                },\n                children: \"Email :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                style: {\n                  width: \"300px\",\n                  marginLeft: \"60px\",\n                  color: \"white\"\n                },\n                name: \"email\",\n                rules: [{\n                  type: 'email',\n                  message: 'The input is not valid E-mail!'\n                }, {\n                  required: true,\n                  message: 'Please input your E-mail!'\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"white\",\n                  marginLeft: \"70px\",\n                  float: \"left\",\n                  fontSize: \"18px\"\n                },\n                children: \"Password :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                style: {\n                  width: \"300px\",\n                  marginLeft: \"60px\",\n                  color: \"white\"\n                },\n                name: \"password\",\n                rules: [{\n                  required: true,\n                  message: \"Please input your password!\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"white\",\n                  marginLeft: \"70px\",\n                  float: \"left\",\n                  fontSize: \"18px\"\n                },\n                children: \"Conform Password :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                style: {\n                  width: \"300px\",\n                  marginLeft: \"60px\",\n                  color: \"white\"\n                },\n                name: \"c_password\",\n                rules: [{\n                  required: true,\n                  message: \"Please input your password!\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn btn-success\",\n                  type: \"primary\",\n                  htmlType: \"submit\",\n                  style: {\n                    padding: \"0px 40px\",\n                    marginTop: \"20px\"\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  // paddingRight:\"90px\",\n                  textAlign: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  style: {\n                    marginLeft: \"0px\",\n                    width: \"200px\",\n                    color: \"green\"\n                  },\n                  to: \"/login\",\n                  children: \" Admin Portal-(Login)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 15\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  style: {\n                    marginLeft: \"0px\",\n                    width: \"200px\",\n                    color: \"green\"\n                  },\n                  to: \"/student-portal\",\n                  children: \"Student Portal-(Login)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 15\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 67\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(StudentRegister, \"fExY2HLUAmaV+wgp9FS9A0IoOao=\");\n\n_c = StudentRegister;\nexport default StudentRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentRegister\");","map":{"version":3,"sources":["C:/Users/Abrar khan Zargai/Desktop/NUML-BMS/project/BUS-API-Dashboard/src/pages/StudentRegister.js"],"names":["Form","Input","Button","Typography","Radio","Upload","Table","Select","message","Spin","Row","Col","Divider","InputNumber","useEffect","useState","Redirect","Route","Link","numl","DepartmentApi","BusApi","StudentApi","RouteApi","DriverApi","Option","propertiesUpload","name","action","headers","authorization","StudentRegister","Title","isLoggedIn","setIsLoggedIn","buses","setBuses","routes","setRoutes","loading","setLoading","slipPhoto","SetSlipPhoto","mounted","setMounted","columns","title","dataIndex","key","editable","sorter","a","b","length","capacity","assignedRoute","render","_","record","assignedDriver","columnsRoute","stops","getBuses","response","getAll","newResponse","data","map","bus","object","_id","console","log","error","getRoutes","route","handleChange","e","file","status","alert","imgUrl","myBuses","myRoutes","onFinish","values","password","c_password","create","success","onFinishFailed","errorInfo","position","top","right","transform","backgroundImage","backgroundSize","backgroundPosition","height","width","display","flexDirection","alignItems","justifyContent","backgroundAttachment","marginTop","margin","textAlign","remember","color","marginLeft","float","fontSize","required","asyncValidator","rule","value","Promise","resolve","reject","match","type","padding"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Typography,Radio, Upload,Table,Select,message, Spin, Row, Col, Divider, InputNumber } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport numl from '../numl.jpg'\r\nimport '../App.css'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { DepartmentApi , BusApi,StudentApi,RouteApi, DriverApi} from \"../services/api\";\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst propertiesUpload = {\r\n  name: 'myFile',\r\n  action: 'http://localhost:8080/api/auth/upload',\r\n  headers: {\r\n    authorization: 'authorization-text',\r\n  }\r\n}\r\n\r\n\r\nfunction StudentRegister() {\r\n  const { Title } = Typography;\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [buses, setBuses] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [slipPhoto, SetSlipPhoto] = useState();\r\n  const [mounted, setMounted] = useState(true);\r\n\r\n  // const [mounted, setMounted] = useState(true);\r\n\r\n  // const [departments, setDepartments] = useState([]);\r\n  // const [form] = Form.useForm();\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      editable: true,\r\n      sorter: (a, b) => a.name.length - b.name.length\r\n\r\n    },\r\n    {\r\n      title: \"Capacity\",\r\n      dataIndex: \"capacity\",\r\n      key: \"capacity\",\r\n      editable: true,\r\n      sorter: (a, b) => a.capacity - b.capacity\r\n\r\n    },\r\n    {\r\n      title: \"AssignedRoute\",\r\n      dataIndex: \"assignedRoute\",\r\n      key: \"assignedRoute\",\r\n      editable: true,\r\n      sorter: (a, b) => a.assignedRoute.length - b.assignedRoute.length,\r\n      render: (_, record) => {\r\n        return record.assignedRoute.name;\r\n      },\r\n    },\r\n    {\r\n      title: \"AssignedDriver\",\r\n      dataIndex: \"assignedDriver\",\r\n      key: \"assignedDriver\",\r\n      editable: true,\r\n      render: (_, record) => {\r\n        return record.assignedDriver.name;\r\n      },\r\n    }\r\n  ];\r\n\r\n  const columnsRoute = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Start Point\",\r\n      dataIndex: \"startPoint\",\r\n      key: \"startPoint\",\r\n      editable: false,\r\n      render: (_, record) =>{\r\n       return <span>\r\n          {record.stops.length >0 ? record?.stops[0].title : ''}\r\n        </span>\r\n      }\r\n    },\r\n    {\r\n      title: \"End Point\",\r\n      dataIndex: \"endPoint\",\r\n      key: \"endPoint\",\r\n      editable: false,\r\n      render: (_, record) =>{\r\n       return <span>\r\n          {record.stops.length >0 ? record?.stops[record.stops.length -1].title : ''}\r\n        </span>\r\n      }\r\n    }\r\n  ];\r\n\r\n  const getBuses = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await BusApi.getAll();\r\n      const newResponse = [...response.data].map((bus) => {\r\n        const object = {\r\n          ...bus,\r\n          key: bus._id,\r\n        };\r\n        return object;\r\n      });\r\n\r\n      setBuses(newResponse);\r\n      setLoading(false);\r\n      console.log(\"Response:\", newResponse);\r\n      console.log(\"BUSES\", buses);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  const getRoutes = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await RouteApi.getAll();\r\n\r\n      console.log(\"response\", response);\r\n\r\n      const newResponse = [...response.data].map((route) => {\r\n        const object = {\r\n          ...route,\r\n          key: route._id,\r\n        };\r\n        return object;\r\n      });\r\n\r\n      console.log(\"newResponse\");\r\n\r\n      setRoutes(newResponse);\r\n      setLoading(false);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e)=>{\r\n    console.log('change',e);\r\n    if(e.file.status == 'done'){\r\n      // set the file url \r\n      alert('uploaded file');\r\n      let imgUrl = e.file.response.file;\r\n      console.log('use', imgUrl)\r\n      if(imgUrl){\r\n        SetSlipPhoto(imgUrl);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const response = async () => {\r\n      try {\r\n        const myBuses = await BusApi.getAll();\r\n        const myRoutes = await RouteApi.getAll();\r\n        setBuses(myBuses.data);\r\n        setRoutes(myRoutes.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    response();\r\n    getBuses();\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n    \r\n  }, [setMounted]);\r\n\r\n    // useEffect(() => {\r\n    // const response = async () => {\r\n    //   try {\r\n    //     const myDepartments = await DepartmentApi.getAll();\r\n    //     setDepartments(myDepartments.data);\r\n    //   } catch (error) {\r\n    //     console.log(error);\r\n    //   }\r\n    // };\r\n    // if (mounted === true) {\r\n    // }\r\n    // response();\r\n    // return () => {\r\n    //   setMounted(false);\r\n    // };\r\n  // }, [setMounted]);\r\n\r\n\r\n  const onFinish = async (values) => {\r\n    if (values.password !== values.c_password) {\r\n      message.error(\"passwords do not match\");\r\n    } else {\r\n      try {\r\n        setLoading(true);\r\n        delete values.c_password;\r\n        console.log('final-val',values);\r\n        const response = await StudentApi.create(values);\r\n        console.log(\"Success\", response.data);\r\n        if (response) {\r\n          // localStorage.setItem(\"token\", response.data.token);\r\n          // localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n          // setIsLoggedIn(true);\r\n          message.success(\"Account Created\");\r\n          message.success(\"Logged in!\");\r\n          setLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        message.error(\"Email already exists\");\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(errorInfo);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoggedIn ? (\r\n        <Redirect to=\"/app\" />\r\n      ) : loading ? (\r\n        <Spin\r\n          size=\"large\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"47%\",\r\n            right: \"50%\",\r\n            transform: \"translate(0, -50%)\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <div\r\n          style={{\r\n            backgroundImage:`url(${numl})`,\r\n            backgroundSize:\"cover\",\r\n            backgroundPosition:\"center\",\r\n            height:\"150vh\",\r\n            width:\"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundAttachment:\"fixed\"\r\n          }}\r\n        >\r\n          {/************ Regestration Container Started Here  **********/}\r\n          <div className='container reg-div'>\r\n          <div className='row '>\r\n          <div className='col-lg-7 col-8 student_registration m-auto '>\r\n          <h1 className='admin_Login_title'>Student <br/>Registeration Form </h1>\r\n         \r\n          <Form name=\"basic\" style={{marginTop:\"20px\", width:\"400px\",margin:\"0px auto\",textAlign:\"center\"}} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n           \r\n            <span style={{color:\"white\", marginLeft:\"70px\",float:\"left\" ,fontSize:\"18px\"}}>\r\n              Full Name :\r\n              </span>\r\n              <Form.Item\r\n                style={{  width: \"300px\", marginLeft: \"60px\", color:\"white\" }}\r\n                name=\"name\"\r\n                rules={[{ \r\n                  required: true, \r\n                  message: \"Please input your Name!\",\r\n                  \r\n                  asyncValidator: (rule, value) => {\r\n                  return new Promise((resolve, reject) => {\r\n                    if (!value.match((/^[A-Za-z]+$/))  ) {\r\n                      reject('Please enter your valid Name');  // reject with error message\r\n                    } \r\n                   \r\n                    else {\r\n                      resolve();\r\n                    }\r\n                  });\r\n                }\r\n                   \r\n                   \r\n                }]}\r\n              >\r\n                \r\n                <Input/>\r\n              </Form.Item>\r\n\r\n              <span style={{color:\"white\",\r\n            marginLeft:\"70px\",float:\"left\" ,fontSize:\"18px\"}}>\r\n              System ID :</span>\r\n              <Form.Item\r\n              style={{\r\n                width: \"300px\",\r\n                marginLeft: \"60px\",\r\n                color:\"white\"\r\n              }}\r\n               \r\n                name=\"systemId\"\r\n                rules={[{ \r\n                  required: true, \r\n                  message: \"System ID must be in formte of NUML-FXX-XXXXX!\",\r\n                  \r\n                 asyncValidator: (rule, value) => {\r\n                 return new Promise((resolve, reject) => {\r\n                   if (!value.match((/[N/n][U/u][M/m][L/l]-([A-Za-z])[0-9]{2}-[0-9]{2}/))) {\r\n                     reject('Enter valid system ID');  // reject with error message\r\n                   } \r\n                   else {\r\n                     resolve();\r\n                   }\r\n                 });\r\n               }\r\n                  \r\n                  \r\n               }]}\r\n              >\r\n                <Input/>\r\n              </Form.Item>\r\n              <span style={{color:\"white\",\r\n            marginLeft:\"70px\",float:\"left\" ,fontSize:\"18px\"}}>\r\n              Gender :</span>\r\n              <Form.Item\r\n          name=\"sex\"\r\n          \r\n          initialValue=\"Male\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select your Gender\",\r\n            },\r\n          ]}\r\n        >\r\n          <Radio.Group >\r\n            <Radio value=\"Male\"><span style={{color:\"white\"}}>Male</span></Radio>\r\n            <Radio value=\"Female\"><span style={{color:\"white\"}}>Male</span></Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <span style={{color:\"white\",\r\n            marginLeft:\"70px\",float:\"left\" ,fontSize:\"18px\"}}>\r\n              Phone Number :</span>\r\n\r\n              <Form.Item\r\n             style={{\r\n                width: \"300px\",\r\n                marginLeft: \"60px\",\r\n                color:\"white\"\r\n              }}\r\n                \r\n                name=\"phone\"\r\n                rules={[{ \r\n                  required: true, \r\n                  message: \"Number Must be in format of 03XX-XXXXXXX!\",\r\n                  \r\n                 asyncValidator: (rule, value) => {\r\n                 return new Promise((resolve, reject) => {\r\n                   if (!value.match((/03[0-9]{2}-[0-9]{7}/))) {\r\n                     reject('Please enter your valid Name');  // reject with error message\r\n                   } \r\n                   else {\r\n                     resolve();\r\n                   }\r\n                 });\r\n               }\r\n                  \r\n                  \r\n               }]}\r\n               \r\n              >\r\n              \r\n                <Input/>\r\n              </Form.Item>\r\n\r\n\r\n              <span style={{color:\"white\",\r\n            marginLeft:\"70px\",float:\"left\" ,fontSize:\"18px\"}}>\r\n              Email :</span>\r\n              <Form.Item\r\n              style={{\r\n                width: \"300px\",\r\n                marginLeft: \"60px\",\r\n                color:\"white\"\r\n              }}\r\n               \r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    type: 'email',\r\n                    message: 'The input is not valid E-mail!',\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your E-mail!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                \r\n                />\r\n              </Form.Item>\r\n\r\n              <span style={{color:\"white\",\r\n            marginLeft:\"70px\",float:\"left\" ,fontSize:\"18px\"}}>\r\n              Password :</span>     \r\n              <Form.Item\r\n              style={{\r\n                width: \"300px\",\r\n                marginLeft: \"60px\",\r\n                color:\"white\"\r\n              }}\r\n               \r\n                name=\"password\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your password!\" },\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n\r\n              <span style={{color:\"white\",\r\n             marginLeft:\"70px\",\r\n            float:\"left\" ,fontSize:\"18px\"}}>\r\n              Conform Password :</span>\r\n              <Form.Item\r\n              style={{\r\n                width: \"300px\",\r\n                marginLeft: \"60px\",\r\n                color:\"white\"\r\n              }}\r\n               \r\n                name=\"c_password\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your password!\" },\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n{/*          \r\n        <Form.Item>\r\n        <Upload {...propertiesUpload} onChange={(e)=> handleChange(e)}\r\n        data={{name:'testing'}}>\r\n    <Button icon={<UploadOutlined />}>Click to Upload Challan</Button>\r\n  </Upload>\r\n        </Form.Item> */}\r\n         \r\n\r\n\r\n             \r\n\r\n            {/* <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item> */}\r\n\r\n            <Form.Item>\r\n              <Button  className=\"btn btn-success\"\r\n                type=\"primary\" htmlType=\"submit\" style={{padding:\"0px 40px\",marginTop:\"20px\"}}>\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n            <div\r\n              style={{\r\n                // paddingRight:\"90px\",\r\n                textAlign:\"center\"\r\n              }}\r\n            >\r\n              <Link\r\n              style={{marginLeft:\"0px\",width:\"200px\", color:\"green\"}}\r\n               to=\"/login\"> Admin Portal-(Login)</Link> <br/>\r\n              <Link\r\n              style={{marginLeft:\"0px\",width:\"200px\", color:\"green\"}}\r\n              to=\"/student-portal\">Student Portal-(Login)</Link>  <br/>\r\n              {/* <Link to=\"/student-register\">Student Portal-(Regestration)</Link> <br/> */}\r\n            </div>\r\n          </Form>\r\n           </div>\r\n          </div>\r\n          </div>\r\n          {/* Login Container End Here  */}\r\n\r\n\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StudentRegister;\r\n"]},"metadata":{},"sourceType":"module"}