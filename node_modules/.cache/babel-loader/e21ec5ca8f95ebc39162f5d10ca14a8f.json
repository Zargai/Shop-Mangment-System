{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrar khan Zargai\\\\Desktop\\\\NUML-BMS\\\\project\\\\BUS-API-Dashboard\\\\src\\\\pages\\\\dashboard\\\\buses\\\\Buses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Typography, Form, message } from \"antd\";\nimport BusModal from \"./BusModal\";\nimport BusTable from \"./BusTable\";\nimport { BusApi, DriverApi, RouteApi } from \"../../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Buses() {\n  _s();\n\n  const [form] = Form.useForm();\n  const {\n    Title\n  } = Typography;\n  const [buses, setBuses] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [editingKey, setEditingKey] = useState(\"\");\n  const [mounted, setMounted] = useState(true);\n  const [visible, setVisible] = useState(false);\n\n  const getBuses = async () => {\n    try {\n      setloading(true);\n      const response = await BusApi.getAll();\n      const newResponse = [...response.data].map(bus => {\n        const object = { ...bus,\n          key: bus._id\n        };\n        return object;\n      });\n      setBuses(newResponse);\n      setloading(false);\n      console.log(\"Response:\", newResponse);\n      console.log(\"BUSES\", buses);\n    } catch (error) {\n      console.log(error.message);\n      message.error(error.message);\n    }\n  };\n\n  const updateBus = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...buses];\n      const index = newData.findIndex(item => key === item.key); // console.log(name);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setEditingKey(\"\");\n        console.log(\"NewBuses\", buses);\n        console.log(\"Newdata\", newData);\n        const {\n          name,\n          capacity,\n          assignedDriver,\n          assignedRoute\n        } = newData[index];\n        console.log(name, capacity, assignedDriver, assignedRoute);\n        const response = await BusApi.update(key, {\n          name,\n          capacity,\n          assignedDriver,\n          assignedRoute\n        });\n\n        if (response) {\n          getBuses();\n          setDisable(false);\n          message.success(\"Item updated\");\n        }\n      } else {\n        newData.push(row);\n        setBuses(newData);\n        setEditingKey(\"\");\n      }\n    } catch (error) {\n      setDisable(false);\n      message.error(error.message);\n      console.log(\"Validate Failed:\", error);\n    }\n  };\n\n  const deleteBus = async key => {\n    try {\n      const newData = [...buses];\n      const index = newData.findIndex(item => key === item.key);\n      const response = await BusApi.delete(key);\n\n      if (response) {\n        getBuses();\n        message.warning(\"Item deleted\");\n      }\n\n      newData.splice(index, 1);\n      setBuses(newData);\n      setEditingKey(\"\");\n    } catch (error) {\n      console.log(\"Validate Failed:\", error);\n    }\n  };\n\n  const submitBus = async values => {\n    console.log(\"values\", values);\n\n    try {\n      const response = await BusApi.create(values);\n\n      if (response) {\n        getBuses();\n        message.success(\"Item Added\");\n      }\n\n      setDisable(false);\n      setVisible(false);\n    } catch (error) {\n      message.error(error.message);\n      console.log(error.response.message);\n    }\n  };\n\n  useEffect(() => {\n    const response = async () => {\n      try {\n        const myRoutes = await RouteApi.getAll();\n        const myDrivers = await DriverApi.getAll();\n        setRoutes(myRoutes.data);\n        setDrivers(myDrivers.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    response();\n    getBuses();\n    return () => {\n      setMounted(false);\n    };\n  }, []);\n  const data = buses.map(bus => {\n    var _bus$assignedRoute, _bus$assignedDriver, _bus$assignedRoute2, _bus$assignedDriver2;\n\n    return {\n      _id: bus._id,\n      key: bus.key,\n      name: bus.name,\n      capacity: bus.capacity,\n      assignedRoute_ID: (_bus$assignedRoute = bus.assignedRoute) === null || _bus$assignedRoute === void 0 ? void 0 : _bus$assignedRoute.name,\n      assignedDriver_ID: (_bus$assignedDriver = bus.assignedDriver) === null || _bus$assignedDriver === void 0 ? void 0 : _bus$assignedDriver.name,\n      assignedRoute: (_bus$assignedRoute2 = bus.assignedRoute) === null || _bus$assignedRoute2 === void 0 ? void 0 : _bus$assignedRoute2._id,\n      assignedDriver: (_bus$assignedDriver2 = bus.assignedDriver) === null || _bus$assignedDriver2 === void 0 ? void 0 : _bus$assignedDriver2._id\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      children: \"Buses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        float: \"right\",\n        marginBottom: \"10px\"\n      },\n      type: \"primary\",\n      disabled: disable,\n      onClick: () => {\n        setVisible(true);\n        setDisable(true);\n      },\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BusTable, {\n      data: data,\n      loading: loading,\n      editingKey: editingKey,\n      setEditingKey: setEditingKey,\n      deleted: deleteBus,\n      editSave: updateBus,\n      form: form,\n      setDisable: setDisable,\n      routes: routes,\n      drivers: drivers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BusModal, {\n      visible: visible,\n      routes: routes,\n      drivers: drivers,\n      onCreate: values => submitBus(values),\n      onCancel: () => {\n        setVisible(false);\n        setDisable(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Buses, \"3c/4ze8ub1jnxC3zFBBb8T39k30=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Buses;\nexport default Buses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buses\");","map":{"version":3,"sources":["C:/Users/Abrar khan Zargai/Desktop/NUML-BMS/project/BUS-API-Dashboard/src/pages/dashboard/buses/Buses.js"],"names":["React","useEffect","useState","Button","Typography","Form","message","BusModal","BusTable","BusApi","DriverApi","RouteApi","Buses","form","useForm","Title","buses","setBuses","routes","setRoutes","drivers","setDrivers","loading","setloading","disable","setDisable","editingKey","setEditingKey","mounted","setMounted","visible","setVisible","getBuses","response","getAll","newResponse","data","map","bus","object","key","_id","console","log","error","updateBus","row","validateFields","newData","index","findIndex","item","splice","name","capacity","assignedDriver","assignedRoute","update","success","push","deleteBus","delete","warning","submitBus","values","create","myRoutes","myDrivers","assignedRoute_ID","assignedDriver_ID","float","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Typography, Form, message } from \"antd\";\r\nimport BusModal from \"./BusModal\";\r\nimport BusTable from \"./BusTable\";\r\nimport { BusApi, DriverApi, RouteApi } from \"../../../services/api\";\r\n\r\nfunction Buses() {\r\n  const [form] = Form.useForm();\r\n  const { Title } = Typography;\r\n  const [buses, setBuses] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [mounted, setMounted] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const getBuses = async () => {\r\n    try {\r\n      setloading(true);\r\n      const response = await BusApi.getAll();\r\n      const newResponse = [...response.data].map((bus) => {\r\n        const object = {\r\n          ...bus,\r\n          key: bus._id,\r\n        };\r\n        return object;\r\n      });\r\n\r\n      setBuses(newResponse);\r\n      setloading(false);\r\n      console.log(\"Response:\", newResponse);\r\n      console.log(\"BUSES\", buses);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  const updateBus = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...buses];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      // console.log(name);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setEditingKey(\"\");\r\n        console.log(\"NewBuses\", buses);\r\n        console.log(\"Newdata\", newData);\r\n\r\n        const { name, capacity, assignedDriver, assignedRoute } = newData[\r\n          index\r\n        ];\r\n        console.log(name, capacity, assignedDriver, assignedRoute);\r\n        const response = await BusApi.update(key, {\r\n          name,\r\n          capacity,\r\n          assignedDriver,\r\n          assignedRoute,\r\n        });\r\n\r\n        if (response) {\r\n          getBuses();\r\n          setDisable(false);\r\n          message.success(\"Item updated\");\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setBuses(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (error) {\r\n      setDisable(false);\r\n      message.error(error.message);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteBus = async (key) => {\r\n    try {\r\n      const newData = [...buses];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      const response = await BusApi.delete(key);\r\n\r\n      if (response) {\r\n        getBuses();\r\n        message.warning(\"Item deleted\");\r\n      }\r\n\r\n      newData.splice(index, 1);\r\n\r\n      setBuses(newData);\r\n      setEditingKey(\"\");\r\n    } catch (error) {\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const submitBus = async (values) => {\r\n    console.log(\"values\", values);\r\n    try {\r\n      const response = await BusApi.create(values);\r\n\r\n      if (response) {\r\n        getBuses();\r\n        message.success(\"Item Added\");\r\n      }\r\n      setDisable(false);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.response.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const response = async () => {\r\n      try {\r\n        const myRoutes = await RouteApi.getAll();\r\n        const myDrivers = await DriverApi.getAll();\r\n\r\n        setRoutes(myRoutes.data);\r\n        setDrivers(myDrivers.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    response();\r\n    getBuses();\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  const data = buses.map((bus) => ({\r\n    _id: bus._id,\r\n    key: bus.key,\r\n    name: bus.name,\r\n    capacity: bus.capacity,\r\n    assignedRoute_ID: bus.assignedRoute?.name,\r\n    assignedDriver_ID: bus.assignedDriver?.name,\r\n    assignedRoute: bus.assignedRoute?._id,\r\n    assignedDriver: bus.assignedDriver?._id,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <Title level={2}>Buses</Title>\r\n      <Button\r\n        style={{\r\n          float: \"right\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        type=\"primary\"\r\n        disabled={disable}\r\n        onClick={() => {\r\n          setVisible(true);\r\n          setDisable(true);\r\n        }}\r\n      >\r\n        Add Item\r\n      </Button>\r\n      {/* <Table bordered columns={columns} dataSource={buses} /> */}\r\n\r\n      <BusTable\r\n        data={data}\r\n        loading={loading}\r\n        editingKey={editingKey}\r\n        setEditingKey={setEditingKey}\r\n        deleted={deleteBus}\r\n        editSave={updateBus}\r\n        form={form}\r\n        setDisable={setDisable}\r\n        routes={routes}\r\n        drivers={drivers}\r\n      />\r\n      <BusModal\r\n        visible={visible}\r\n        routes={routes}\r\n        drivers={drivers}\r\n        onCreate={(values) => submitBus(values)}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n          setDisable(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Buses;\r\n"]},"metadata":{},"sourceType":"module"}