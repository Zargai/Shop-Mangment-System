{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrar khan Zargai\\\\Desktop\\\\NUML-BMS\\\\project\\\\BUS-API-Dashboard\\\\src\\\\pages\\\\dashboard\\\\students\\\\StudentTable.js\";\nimport React from \"react\";\nimport { Table, Input, Popconfirm, Form, Typography, Image, Select } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType;\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: `Please Input ${title}!`\n      }],\n      children: inputNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableCell;\n\nconst StudentTable = ({\n  students,\n  loading,\n  deleted,\n  editingKey,\n  setEditingKey,\n  editSave,\n  form,\n  setDisable\n}) => {\n  const {\n    Link\n  } = Typography;\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\",\n      systemId: \"\",\n      sex: \"\",\n      slipPhoto: \"\",\n      slipVerified: null,\n      verified: null,\n      department: '',\n      // assignedBus,\n      ...record\n    });\n    setEditingKey(record.key);\n    setDisable(true);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n    setDisable(false);\n  };\n\n  const columns = [{\n    title: \"SystemId\",\n    dataIndex: \"systemId\",\n    key: \"systemId\",\n    defaultSortOrder: 'descend'\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    editable: true,\n    sorter: (a, b) => a.name.length - b.name.length\n  }, {\n    title: \"Email\",\n    dataIndex: \"email\",\n    key: \"email\",\n    editable: false,\n    sorter: (a, b) => a.email.length - b.email.length\n  }, // {\n  //   title: \"Password\",\n  //   dataIndex: \"password\",\n  //   key: \"password\",\n  //   editable: true,\n  //   sorter: (a, b) => a.password.length - b.password.length,\n  // },\n  {\n    title: \"Phone\",\n    dataIndex: \"phone\",\n    key: \"phone\",\n    editable: true,\n    sorter: (a, b) => a.phone.length - b.phone.length\n  }, {\n    title: \"Department\",\n    dataIndex: \"department\",\n    key: \"department\",\n    sorter: (a, b) => a.department.length - b.department.length,\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: record.department ? record.department.title : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }, this);\n    }\n  }, {\n    title: \"Slip Photo\",\n    dataIndex: \"slipPhoto\",\n    key: \"slipPhoto\",\n    sorter: (a, b) => a.slipPhoto.length - b.slipPhoto.length,\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(Image, {\n        width: 200,\n        src: record.slipPhoto || \"https://www.wkbn.com/wp-content/uploads/sites/48/2020/06/missing-generic.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this);\n    }\n  }, {\n    title: \"slipVerified\",\n    dataIndex: \"slipVerified\",\n    key: \"slipVerified\",\n    sorter: (a, b) => a === b ? 0 : a ? -1 : 1,\n    editable: true,\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [String(record.slipVerified), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 16\n      }, this);\n    }\n  }, // {\n  //   title: \"Account Status\",\n  //   dataIndex: \"verified\",\n  //   key: \"verified\",\n  //   editable: true,\n  //   render: (_,record) =>{\n  //     return <span>{String(record.verified)} </span>\n  //   }\n  // },\n  {\n    title: \"Actions\",\n    align: \"center\",\n    dataIndex: \"operation\",\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => {\n            editSave(record.key);\n          },\n          style: {\n            marginRight: 8\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n          style: editingKey !== \"\" ? {\n            display: \"none\"\n          } : {\n            color: \"blue\"\n          } // editingKey !== \"\"\n          ,\n          onClick: () => edit(record),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Are you sure\\uFF1F\",\n          okText: \"Yes\" // onConfirm={}\n          ,\n          cancelText: \"No\",\n          onConfirm: () => deleted(record.key),\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            style: editingKey !== \"\" ? {\n              display: \"none\"\n            } : {\n              color: \"red\",\n              marginLeft: \"20px\"\n            },\n            disabled: editingKey !== \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === \"slipVerified\" ? /*#__PURE__*/_jsxDEV(Select, {\n          showSearch: true,\n          style: {\n            width: 200\n          },\n          placeholder: \"Select Status\",\n          filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: 'true',\n            children: \"True\"\n          }, 'slipVerified', false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: 'false',\n            children: \"False\"\n          }, 'slipVerified2', false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this) : col.dataIndex === \"verified\" ? /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            width: 200\n          },\n          placeholder: \"Account Status\",\n          filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: 'true',\n            children: \"True\"\n          }, 'verified1', false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: 'false',\n            children: \"False\"\n          }, 'verifiedd2', false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this),\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      style: {\n        color: \"red\"\n      },\n      loading: loading,\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      bordered: true,\n      dataSource: students,\n      columns: mergedColumns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: cancel\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = StudentTable;\nexport default StudentTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"StudentTable\");","map":{"version":3,"sources":["C:/Users/Abrar khan Zargai/Desktop/NUML-BMS/project/BUS-API-Dashboard/src/pages/dashboard/students/StudentTable.js"],"names":["React","Table","Input","Popconfirm","Form","Typography","Image","Select","EditOutlined","DeleteOutlined","Option","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","StudentTable","students","loading","deleted","editingKey","setEditingKey","editSave","form","setDisable","Link","isEditing","key","edit","setFieldsValue","name","email","password","phone","systemId","sex","slipPhoto","slipVerified","verified","department","cancel","columns","defaultSortOrder","editable","sorter","a","b","length","render","_","String","align","marginRight","display","color","marginLeft","mergedColumns","map","col","onCell","width","input","option","toLowerCase","indexOf","body","cell","onChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,UAAvB,EAAmCC,IAAnC,EAAyCC,UAAzC,EAAqDC,KAArD,EAA4DC,MAA5D,QAA0E,MAA1E;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,mBAA7C;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaH,MAAnB;;AAEA,MAAMI,YAAY,GAAG,CAAC;AACpBC,EAAAA,OADoB;AAEpBC,EAAAA,SAFoB;AAGpBC,EAAAA,KAHoB;AAIpBC,EAAAA,SAJoB;AAKpBC,EAAAA,MALoB;AAMpBC,EAAAA,KANoB;AAOpBC,EAAAA,QAPoB;AAQpB,KAAGC;AARiB,CAAD,KASf;AACJ,QAAMC,SAAS,GAAGL,SAAlB;AACA,sBACE,mBAAQI,SAAR;AAAA,cACGP,OAAO,gBACN,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAEC,SADR;AAEE,MAAA,KAAK,EAAE;AACLQ,QAAAA,MAAM,EAAE;AADH,OAFT;AAKE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAG,gBAAeT,KAAM;AAFjC,OADK,CALT;AAAA,gBAYGM;AAZH;AAAA;AAAA;AAAA;AAAA,YADM,GAgBNF;AAjBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAjCD;;KAAMP,Y;;AAmCN,MAAMa,YAAY,GAAG,CAAC;AACpBC,EAAAA,QADoB;AAEpBC,EAAAA,OAFoB;AAGpBC,EAAAA,OAHoB;AAIpBC,EAAAA,UAJoB;AAKpBC,EAAAA,aALoB;AAMpBC,EAAAA,QANoB;AAOpBC,EAAAA,IAPoB;AAQpBC,EAAAA;AARoB,CAAD,KASf;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAW5B,UAAjB;;AAEA,QAAM6B,SAAS,GAAIlB,MAAD,IAAYA,MAAM,CAACmB,GAAP,KAAeP,UAA7C;;AAEA,QAAMQ,IAAI,GAAIpB,MAAD,IAAY;AACvBe,IAAAA,IAAI,CAACM,cAAL,CAAoB;AAClBC,MAAAA,IAAI,EAAE,EADY;AAElBC,MAAAA,KAAK,EAAE,EAFW;AAGlBC,MAAAA,QAAQ,EAAE,EAHQ;AAIlBC,MAAAA,KAAK,EAAE,EAJW;AAKlBC,MAAAA,QAAQ,EAAE,EALQ;AAMlBC,MAAAA,GAAG,EAAE,EANa;AAOlBC,MAAAA,SAAS,EAAC,EAPQ;AAQlBC,MAAAA,YAAY,EAAC,IARK;AASlBC,MAAAA,QAAQ,EAAC,IATS;AAUlBC,MAAAA,UAAU,EAAC,EAVO;AAWlB;AACA,SAAG/B;AAZe,KAApB;AAcAa,IAAAA,aAAa,CAACb,MAAM,CAACmB,GAAR,CAAb;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAjBD;;AAmBA,QAAMgB,MAAM,GAAG,MAAM;AACnBnB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAKA,QAAMiB,OAAO,GAAG,CACd;AACEnC,IAAAA,KAAK,EAAE,UADT;AAEED,IAAAA,SAAS,EAAE,UAFb;AAGEsB,IAAAA,GAAG,EAAE,UAHP;AAIEe,IAAAA,gBAAgB,EAAE;AAJpB,GADc,EAOb;AACCpC,IAAAA,KAAK,EAAE,MADR;AAECD,IAAAA,SAAS,EAAE,MAFZ;AAGCsB,IAAAA,GAAG,EAAE,MAHN;AAICgB,IAAAA,QAAQ,EAAE,IAJX;AAKCC,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACf,IAAF,CAAOiB,MAAP,GAAgBD,CAAC,CAAChB,IAAF,CAAOiB;AAL1C,GAPa,EAed;AACEzC,IAAAA,KAAK,EAAE,OADT;AAEED,IAAAA,SAAS,EAAE,OAFb;AAGEsB,IAAAA,GAAG,EAAE,OAHP;AAIEgB,IAAAA,QAAQ,EAAE,KAJZ;AAKEC,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACd,KAAF,CAAQgB,MAAR,GAAiBD,CAAC,CAACf,KAAF,CAAQgB;AAL7C,GAfc,EAuBd;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACEzC,IAAAA,KAAK,EAAE,OADT;AAEED,IAAAA,SAAS,EAAE,OAFb;AAGEsB,IAAAA,GAAG,EAAE,OAHP;AAIEgB,IAAAA,QAAQ,EAAE,IAJZ;AAKEC,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACZ,KAAF,CAAQc,MAAR,GAAiBD,CAAC,CAACb,KAAF,CAAQc;AAL7C,GA/Bc,EAuCd;AACEzC,IAAAA,KAAK,EAAE,YADT;AAEED,IAAAA,SAAS,EAAE,YAFb;AAGEsB,IAAAA,GAAG,EAAE,YAHP;AAIEiB,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACN,UAAF,CAAaQ,MAAb,GAAsBD,CAAC,CAACP,UAAF,CAAaQ,MAJvD;AAKEC,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAGzC,MAAH,KAAa;AACnB,0BAAO;AAAA,kBAAMA,MAAM,CAAE+B,UAAR,GAAqB/B,MAAM,CAAC+B,UAAP,CAAkBjC,KAAvC,GAA8C;AAApD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAPH,GAvCc,EAiDd;AACEA,IAAAA,KAAK,EAAE,YADT;AAEED,IAAAA,SAAS,EAAE,WAFb;AAGEsB,IAAAA,GAAG,EAAE,WAHP;AAIEiB,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACT,SAAF,CAAYW,MAAZ,GAAqBD,CAAC,CAACV,SAAF,CAAYW,MAJrD;AAMEC,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAGzC,MAAH,KAAa;AACnB,0BAAQ,QAAC,KAAD;AACR,QAAA,KAAK,EAAE,GADC;AAER,QAAA,GAAG,EAAEA,MAAM,CAAC4B,SAAP,IAAoB;AAFjB;AAAA;AAAA;AAAA;AAAA,cAAR;AAID;AAXH,GAjDc,EA+Dd;AACE9B,IAAAA,KAAK,EAAE,cADT;AAEED,IAAAA,SAAS,EAAE,cAFb;AAGEsB,IAAAA,GAAG,EAAE,cAHP;AAIEiB,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,KAAKC,CAAP,GAAW,CAAX,GAAeD,CAAC,GAAE,CAAC,CAAH,GAAO,CAJ3C;AAKEF,IAAAA,QAAQ,EAAE,IALZ;AAMEK,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAGzC,MAAH,KAAa;AACnB,0BAAO;AAAA,mBAAO0C,MAAM,CAAC1C,MAAM,CAAC6B,YAAR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AARH,GA/Dc,EAyEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE/B,IAAAA,KAAK,EAAE,SADT;AAEE6C,IAAAA,KAAK,EAAE,QAFT;AAGE9C,IAAAA,SAAS,EAAE,WAHb;AAIE2C,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIzC,MAAJ,KAAe;AACrB,YAAMmC,QAAQ,GAAGjB,SAAS,CAAClB,MAAD,CAA1B;AACA,aAAOmC,QAAQ,gBACb;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACbrB,YAAAA,QAAQ,CAACd,MAAM,CAACmB,GAAR,CAAR;AAAqB,WAFzB;AAIE,UAAA,KAAK,EAAE;AACLyB,YAAAA,WAAW,EAAE;AADR,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,iBAAlB;AAAoC,UAAA,SAAS,EAAEZ,MAA/C;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,gBAiBb;AAAA,gCACE,QAAC,YAAD;AACE,UAAA,KAAK,EACHpB,UAAU,KAAK,EAAf,GACI;AACEiC,YAAAA,OAAO,EAAE;AADX,WADJ,GAII;AACEC,YAAAA,KAAK,EAAE;AADT,WANR,CAUE;AAVF;AAWE,UAAA,OAAO,EAAE,MAAM1B,IAAI,CAACpB,MAAD,CAXrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,UAAD;AACE,UAAA,KAAK,EAAC,oBADR;AAEE,UAAA,MAAM,EAAC,KAFT,CAGE;AAHF;AAIE,UAAA,UAAU,EAAC,IAJb;AAKE,UAAA,SAAS,EAAE,MAAMW,OAAO,CAACX,MAAM,CAACmB,GAAR,CAL1B;AAAA,iCAOE,QAAC,cAAD;AACE,YAAA,KAAK,EACHP,UAAU,KAAK,EAAf,GACI;AACEiC,cAAAA,OAAO,EAAE;AADX,aADJ,GAII;AACEC,cAAAA,KAAK,EAAE,KADT;AAEEC,cAAAA,UAAU,EAAE;AAFd,aANR;AAWE,YAAA,QAAQ,EAAEnC,UAAU,KAAK;AAX3B;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAwDD;AA9DH,GAlFc,CAAhB;AAqJA,QAAMoC,aAAa,GAAGf,OAAO,CAACgB,GAAR,CAAaC,GAAD,IAAS;AACzC,QAAI,CAACA,GAAG,CAACf,QAAT,EAAmB;AACjB,aAAOe,GAAP;AACD;;AAED,WAAO,EACL,GAAGA,GADE;AAELC,MAAAA,MAAM,EAAGnD,MAAD,KAAa;AACnBA,QAAAA,MADmB;AAEnBD,QAAAA,SAAS,EACLmD,GAAG,CAACrD,SAAJ,KAAkB,cAAlB,gBACE,QAAC,MAAD;AACE,UAAA,UAAU,MADZ;AAEE,UAAA,KAAK,EAAE;AAAEuD,YAAAA,KAAK,EAAE;AAAT,WAFT;AAGE,UAAA,WAAW,EAAC,eAHd;AAIE,UAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KACZA,MAAM,CAACpD,QAAP,CAAgBqD,WAAhB,GAA8BC,OAA9B,CAAsCH,KAAK,CAACE,WAAN,EAAtC,KAA8D,CALlE;AAAA,kCAQM,QAAC,MAAD;AAA6B,YAAA,KAAK,EAAE,MAApC;AAAA;AAAA,aAAa,cAAb;AAAA;AAAA;AAAA;AAAA,kBARN,eAWM,QAAC,MAAD;AAA8B,YAAA,KAAK,EAAE,OAArC;AAAA;AAAA,aAAa,eAAb;AAAA;AAAA;AAAA;AAAA,kBAXN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,GAiBAL,GAAG,CAACrD,SAAJ,KAAkB,UAAlB,gBACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAE;AAAEuD,YAAAA,KAAK,EAAE;AAAT,WADT;AAEE,UAAA,WAAW,EAAC,gBAFd;AAGE,UAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KACZA,MAAM,CAACpD,QAAP,CAAgBqD,WAAhB,GAA8BC,OAA9B,CAAsCH,KAAK,CAACE,WAAN,EAAtC,KAA8D,CAJlE;AAAA,kCAOM,QAAC,MAAD;AAA0B,YAAA,KAAK,EAAE,MAAjC;AAAA;AAAA,aAAa,WAAb;AAAA;AAAA;AAAA;AAAA,kBAPN,eAUM,QAAC,MAAD;AAA2B,YAAA,KAAK,EAAE,OAAlC;AAAA;AAAA,aAAa,YAAb;AAAA;AAAA;AAAA;AAAA,kBAVN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,gBAgBA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBApCe;AAsCf1D,QAAAA,SAAS,EAAEqD,GAAG,CAACrD,SAtCA;AAuCnBC,QAAAA,KAAK,EAAEoD,GAAG,CAACpD,KAvCQ;AAwCnBF,QAAAA,OAAO,EAAEsB,SAAS,CAAClB,MAAD;AAxCC,OAAb;AAFH,KAAP;AA6CD,GAlDqB,CAAtB;AAmDA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEe,IAAZ;AAAkB,IAAA,SAAS,EAAE,KAA7B;AAAA,2BACE,QAAC,KAAD;AACA,MAAA,KAAK,EAAE;AAAC+B,QAAAA,KAAK,EAAC;AAAP,OADP;AAEE,MAAA,OAAO,EAAEpC,OAFX;AAGE,MAAA,UAAU,EAAE;AACV+C,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE/D;AADF;AADI,OAHd;AAQE,MAAA,QAAQ,MARV;AASE,MAAA,UAAU,EAAEc,QATd;AAUE,MAAA,OAAO,EAAEuC,aAVX;AAWE,MAAA,YAAY,EAAC,cAXf;AAYE,MAAA,UAAU,EAAE;AACVW,QAAAA,QAAQ,EAAE3B;AADA;AAZd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAlQD;;MAAMxB,Y;AAoQN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Table, Input, Popconfirm, Form, Typography, Image, Select } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nconst { Option } = Select;\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst StudentTable = ({\r\n  students,\r\n  loading,\r\n  deleted,\r\n  editingKey,\r\n  setEditingKey,\r\n  editSave,\r\n  form,\r\n  setDisable,\r\n}) => {\r\n  const { Link } = Typography;\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      phone: \"\",\r\n      systemId: \"\",\r\n      sex: \"\",\r\n      slipPhoto:\"\",\r\n      slipVerified:null,\r\n      verified:null, \r\n      department:'',\r\n      // assignedBus,\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n    setDisable(true);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"SystemId\",\r\n      dataIndex: \"systemId\",\r\n      key: \"systemId\",\r\n      defaultSortOrder: 'descend'\r\n    },\r\n     {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      editable: true,\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      editable: false,\r\n      sorter: (a, b) => a.email.length - b.email.length,\r\n\r\n    },\r\n    // {\r\n    //   title: \"Password\",\r\n    //   dataIndex: \"password\",\r\n    //   key: \"password\",\r\n    //   editable: true,\r\n    //   sorter: (a, b) => a.password.length - b.password.length,\r\n\r\n    // },\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"phone\",\r\n      key: \"phone\",\r\n      editable: true,\r\n      sorter: (a, b) => a.phone.length - b.phone.length,\r\n\r\n    },\r\n    {\r\n      title: \"Department\",\r\n      dataIndex: \"department\",\r\n      key: \"department\",\r\n      sorter: (a, b) => a.department.length - b.department.length,\r\n      render: (_,record) =>{\r\n        return <div>{record. department ? record.department.title :''}</div>\r\n      }\r\n    },\r\n    \r\n    {\r\n      title: \"Slip Photo\",\r\n      dataIndex: \"slipPhoto\",\r\n      key: \"slipPhoto\",\r\n      sorter: (a, b) => a.slipPhoto.length - b.slipPhoto.length,\r\n\r\n      render: (_,record) =>{\r\n        return  <Image\r\n        width={200}\r\n        src={record.slipPhoto || \"https://www.wkbn.com/wp-content/uploads/sites/48/2020/06/missing-generic.jpg\"}\r\n      />\r\n      },\r\n\r\n    },\r\n    {\r\n      title: \"slipVerified\",\r\n      dataIndex: \"slipVerified\",\r\n      key: \"slipVerified\",\r\n      sorter: (a, b) => (a === b)? 0 : a? -1 : 1,\r\n      editable: true,\r\n      render: (_,record) =>{\r\n        return <span>{String(record.slipVerified)} </span>\r\n      }\r\n    },\r\n    // {\r\n    //   title: \"Account Status\",\r\n    //   dataIndex: \"verified\",\r\n    //   key: \"verified\",\r\n    //   editable: true,\r\n    //   render: (_,record) =>{\r\n    //     return <span>{String(record.verified)} </span>\r\n    //   }\r\n    // },\r\n    {\r\n      title: \"Actions\",\r\n      align: \"center\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Link\r\n              onClick={() => { \r\n                editSave(record.key)}\r\n              }\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </Link>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Link>Cancel</Link>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <EditOutlined\r\n              style={\r\n                editingKey !== \"\"\r\n                  ? {\r\n                      display: \"none\",\r\n                    }\r\n                  : {\r\n                      color: \"blue\",\r\n                    }\r\n              }\r\n              // editingKey !== \"\"\r\n              onClick={() => edit(record)}\r\n            >\r\n              Edit\r\n            </EditOutlined>\r\n            <Popconfirm\r\n              title=\"Are you sure？\"\r\n              okText=\"Yes\"\r\n              // onConfirm={}\r\n              cancelText=\"No\"\r\n              onConfirm={() => deleted(record.key)}\r\n            >\r\n              <DeleteOutlined\r\n                style={\r\n                  editingKey !== \"\"\r\n                    ? {\r\n                        display: \"none\",\r\n                      }\r\n                    : {\r\n                        color: \"red\",\r\n                        marginLeft: \"20px\",\r\n                      }\r\n                }\r\n                disabled={editingKey !== \"\"}\r\n              />\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType:\r\n            col.dataIndex === \"slipVerified\" ? (\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Status\"\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                    <Option key={'slipVerified'} value={'true'}>\r\n                      True\r\n                    </Option>\r\n                    <Option key={'slipVerified2'} value={'false'}>\r\n                      False\r\n                    </Option>\r\n              </Select>\r\n            )   : \r\n            col.dataIndex === \"verified\" ? (\r\n              <Select\r\n                style={{ width: 200 }}\r\n                placeholder=\"Account Status\"\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                    <Option key={'verified1'} value={'true'}>\r\n                      True\r\n                    </Option>\r\n                    <Option key={'verifiedd2'} value={'false'}>\r\n                      False\r\n                    </Option>\r\n              </Select>\r\n            )   : \r\n            <Input />\r\n            ,\r\n            dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n      style={{color:\"red\"}}\r\n        loading={loading}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={students}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default StudentTable;\r\n"]},"metadata":{},"sourceType":"module"}