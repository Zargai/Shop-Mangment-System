{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrar khan Zargai\\\\Desktop\\\\NUML-BMS\\\\project\\\\BUS-API-Dashboard\\\\src\\\\pages\\\\dashboard\\\\supports\\\\SupportTable.js\";\nimport React from \"react\";\nimport { Table, Input, Popconfirm, Form, Typography } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === \"text\" && /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 45\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: `Please Input ${title}!`\n      }],\n      children: inputNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableCell;\n\nconst SupportTable = ({\n  supports,\n  loading,\n  deleted,\n  editingKey,\n  setEditingKey,\n  editSave,\n  form,\n  setDisable\n}) => {\n  const {\n    Link\n  } = Typography;\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      Title: \"\",\n      ...record\n    });\n    setEditingKey(record.key);\n    setDisable(true);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n    setDisable(false);\n  };\n\n  const columns = [{\n    title: \"Student Name\",\n    dataIndex: \"studentId\",\n    key: \"studentId\",\n    editable: true,\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: record.studentId.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }, this);\n    }\n  }, {\n    title: \"Title\",\n    dataIndex: \"title\",\n    key: \"title\",\n    editable: true\n  }, {\n    title: \"Message\",\n    dataIndex: \"message\",\n    key: \"message\",\n    editable: true\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    editable: true,\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", String(record.status)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: \"Actions\",\n    align: \"center\",\n    dataIndex: \"operation\",\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => editSave(record.key),\n          style: {\n            marginRight: 8\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n          style: editingKey !== \"\" ? {\n            display: \"none\"\n          } : {\n            color: \"blue\"\n          } // editingKey !== \"\"\n          ,\n          onClick: () => edit(record),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Are you sure\\uFF1F\",\n          okText: \"Yes\" // onConfirm={}\n          ,\n          cancelText: \"No\",\n          onConfirm: () => deleted(record.key),\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            style: editingKey !== \"\" ? {\n              display: \"none\"\n            } : {\n              color: \"red\",\n              marginLeft: \"20px\"\n            },\n            disabled: editingKey !== \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex && \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      loading: loading,\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      bordered: true,\n      dataSource: supports,\n      columns: mergedColumns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: cancel\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SupportTable;\nexport default SupportTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"SupportTable\");","map":{"version":3,"sources":["C:/Users/Abrar khan Zargai/Desktop/NUML-BMS/project/BUS-API-Dashboard/src/pages/dashboard/supports/SupportTable.js"],"names":["React","Table","Input","Popconfirm","Form","Typography","EditOutlined","DeleteOutlined","TextArea","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","SupportTable","supports","loading","deleted","editingKey","setEditingKey","editSave","form","setDisable","Link","isEditing","key","edit","setFieldsValue","Title","cancel","columns","editable","render","_","studentId","name","String","status","align","marginRight","display","color","marginLeft","mergedColumns","map","col","onCell","body","cell","onChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,UAAvB,EAAmCC,IAAnC,EAAyCC,UAAzC,QAA2D,MAA3D;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,mBAA7C;;AAGA,MAAM;AAAEC,EAAAA;AAAF,IAAeN,KAArB;;AAGA,MAAMO,YAAY,GAAG,CAAC;AACpBC,EAAAA,OADoB;AAEpBC,EAAAA,SAFoB;AAGpBC,EAAAA,KAHoB;AAIpBC,EAAAA,SAJoB;AAKpBC,EAAAA,MALoB;AAMpBC,EAAAA,KANoB;AAOpBC,EAAAA,QAPoB;AAQpB,KAAGC;AARiB,CAAD,KASf;AACJ,QAAMC,SAAS,GAAGL,SAAS,KAAK,MAAd,iBAAwB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAA1C;;AACA,sBACE,mBAAQI,SAAR;AAAA,cACGP,OAAO,gBACN,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAEC,SADR;AAEE,MAAA,KAAK,EAAE;AACLQ,QAAAA,MAAM,EAAE;AADH,OAFT;AAKE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAG,gBAAeT,KAAM;AAFjC,OADK,CALT;AAAA,gBAYGM;AAZH;AAAA;AAAA;AAAA;AAAA,YADM,GAgBNF;AAjBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAjCD;;KAAMP,Y;;AAmCN,MAAMa,YAAY,GAAG,CAAC;AACpBC,EAAAA,QADoB;AAEpBC,EAAAA,OAFoB;AAGpBC,EAAAA,OAHoB;AAIpBC,EAAAA,UAJoB;AAKpBC,EAAAA,aALoB;AAMpBC,EAAAA,QANoB;AAOpBC,EAAAA,IAPoB;AAQpBC,EAAAA;AARoB,CAAD,KASf;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAW1B,UAAjB;;AAEA,QAAM2B,SAAS,GAAIlB,MAAD,IAAYA,MAAM,CAACmB,GAAP,KAAeP,UAA7C;;AAEA,QAAMQ,IAAI,GAAIpB,MAAD,IAAY;AACvBe,IAAAA,IAAI,CAACM,cAAL,CAAoB;AAClBC,MAAAA,KAAK,EAAE,EADW;AAElB,SAAGtB;AAFe,KAApB;AAIAa,IAAAA,aAAa,CAACb,MAAM,CAACmB,GAAR,CAAb;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAPD;;AASA,QAAMO,MAAM,GAAG,MAAM;AACnBV,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAKA,QAAMQ,OAAO,GAAG,CACd;AACE1B,IAAAA,KAAK,EAAE,cADT;AAEED,IAAAA,SAAS,EAAE,WAFb;AAGEsB,IAAAA,GAAG,EAAE,WAHP;AAIEM,IAAAA,QAAQ,EAAE,IAJZ;AAKEC,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAI3B,MAAJ,KAAe;AACrB,0BAAO;AAAA,kBACJA,MAAM,CAAC4B,SAAP,CAAiBC;AADb;AAAA;AAAA;AAAA;AAAA,cAAP;AAGD;AATH,GADc,EAYd;AACE/B,IAAAA,KAAK,EAAE,OADT;AAEED,IAAAA,SAAS,EAAE,OAFb;AAGEsB,IAAAA,GAAG,EAAE,OAHP;AAIEM,IAAAA,QAAQ,EAAE;AAJZ,GAZc,EAkBd;AACE3B,IAAAA,KAAK,EAAE,SADT;AAEED,IAAAA,SAAS,EAAE,SAFb;AAGEsB,IAAAA,GAAG,EAAE,SAHP;AAIEM,IAAAA,QAAQ,EAAE;AAJZ,GAlBc,EAwBd;AACE3B,IAAAA,KAAK,EAAE,QADT;AAEED,IAAAA,SAAS,EAAE,QAFb;AAGEsB,IAAAA,GAAG,EAAE,QAHP;AAIEM,IAAAA,QAAQ,EAAE,IAJZ;AAKEC,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAG3B,MAAH,KAAY;AAClB,0BACE;AAAA,wBAAO8B,MAAM,CAAC9B,MAAM,CAAC+B,MAAR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AATH,GAxBc,EAmCd;AACEjC,IAAAA,KAAK,EAAE,SADT;AAEEkC,IAAAA,KAAK,EAAE,QAFT;AAGEnC,IAAAA,SAAS,EAAE,WAHb;AAIE6B,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAI3B,MAAJ,KAAe;AACrB,YAAMyB,QAAQ,GAAGP,SAAS,CAAClB,MAAD,CAA1B;AACA,aAAOyB,QAAQ,gBACb;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,OAAO,EAAE,MAAMX,QAAQ,CAACd,MAAM,CAACmB,GAAR,CADzB;AAEE,UAAA,KAAK,EAAE;AACLc,YAAAA,WAAW,EAAE;AADR,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,iBAAlB;AAAoC,UAAA,SAAS,EAAEV,MAA/C;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,gBAeb;AAAA,gCACE,QAAC,YAAD;AACE,UAAA,KAAK,EACHX,UAAU,KAAK,EAAf,GACI;AACEsB,YAAAA,OAAO,EAAE;AADX,WADJ,GAII;AACEC,YAAAA,KAAK,EAAE;AADT,WANR,CAUE;AAVF;AAWE,UAAA,OAAO,EAAE,MAAMf,IAAI,CAACpB,MAAD,CAXrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,UAAD;AACE,UAAA,KAAK,EAAC,oBADR;AAEE,UAAA,MAAM,EAAC,KAFT,CAGE;AAHF;AAIE,UAAA,UAAU,EAAC,IAJb;AAKE,UAAA,SAAS,EAAE,MAAMW,OAAO,CAACX,MAAM,CAACmB,GAAR,CAL1B;AAAA,iCAOE,QAAC,cAAD;AACE,YAAA,KAAK,EACHP,UAAU,KAAK,EAAf,GACI;AACEsB,cAAAA,OAAO,EAAE;AADX,aADJ,GAII;AACEC,cAAAA,KAAK,EAAE,KADT;AAEEC,cAAAA,UAAU,EAAE;AAFd,aANR;AAWE,YAAA,QAAQ,EAAExB,UAAU,KAAK;AAX3B;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAsDD;AA5DH,GAnCc,CAAhB;AAkGA,QAAMyB,aAAa,GAAGb,OAAO,CAACc,GAAR,CAAaC,GAAD,IAAS;AACzC,QAAI,CAACA,GAAG,CAACd,QAAT,EAAmB;AACjB,aAAOc,GAAP;AACD;;AAED,WAAO,EACL,GAAGA,GADE;AAELC,MAAAA,MAAM,EAAGxC,MAAD,KAAa;AACnBA,QAAAA,MADmB;AAEnBD,QAAAA,SAAS,EAAEwC,GAAG,CAAC1C,SAAJ,IAAiB,MAFT;AAGnBA,QAAAA,SAAS,EAAE0C,GAAG,CAAC1C,SAHI;AAInBC,QAAAA,KAAK,EAAEyC,GAAG,CAACzC,KAJQ;AAKnBF,QAAAA,OAAO,EAAEsB,SAAS,CAAClB,MAAD;AALC,OAAb;AAFH,KAAP;AAUD,GAfqB,CAAtB;AAgBA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEe,IAAZ;AAAkB,IAAA,SAAS,EAAE,KAA7B;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,OAAO,EAAEL,OADX;AAEE,MAAA,UAAU,EAAE;AACV+B,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE/C;AADF;AADI,OAFd;AAOE,MAAA,QAAQ,MAPV;AAQE,MAAA,UAAU,EAAEc,QARd;AASE,MAAA,OAAO,EAAE4B,aATX;AAUE,MAAA,YAAY,EAAC,cAVf;AAWE,MAAA,UAAU,EAAE;AACVM,QAAAA,QAAQ,EAAEpB;AADA;AAXd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjKD;;MAAMf,Y;AAmKN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Table, Input, Popconfirm, Form, Typography } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"text\" && <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst SupportTable = ({\r\n  supports,\r\n  loading,\r\n  deleted,\r\n  editingKey,\r\n  setEditingKey,\r\n  editSave,\r\n  form,\r\n  setDisable,\r\n}) => {\r\n  const { Link } = Typography;\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      Title: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n    setDisable(true);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Student Name\",\r\n      dataIndex: \"studentId\",\r\n      key: \"studentId\",\r\n      editable: true,\r\n      render: (_, record) => {\r\n        return <div>\r\n          {record.studentId.name}\r\n        </div>\r\n      }\r\n    },\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Message\",\r\n      dataIndex: \"message\",\r\n      key: \"message\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      editable: true,\r\n      render: (_,record)=>{\r\n        return (\r\n          <div> {String(record.status)}</div>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      align: \"center\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Link\r\n              onClick={() => editSave(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </Link>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Link>Cancel</Link>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <EditOutlined\r\n              style={\r\n                editingKey !== \"\"\r\n                  ? {\r\n                      display: \"none\",\r\n                    }\r\n                  : {\r\n                      color: \"blue\",\r\n                    }\r\n              }\r\n              // editingKey !== \"\"\r\n              onClick={() => edit(record)}\r\n            >\r\n              Edit\r\n            </EditOutlined>\r\n            <Popconfirm\r\n              title=\"Are you sure？\"\r\n              okText=\"Yes\"\r\n              // onConfirm={}\r\n              cancelText=\"No\"\r\n              onConfirm={() => deleted(record.key)}\r\n            >\r\n              <DeleteOutlined\r\n                style={\r\n                  editingKey !== \"\"\r\n                    ? {\r\n                        display: \"none\",\r\n                      }\r\n                    : {\r\n                        color: \"red\",\r\n                        marginLeft: \"20px\",\r\n                      }\r\n                }\r\n                disabled={editingKey !== \"\"}\r\n              />\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex && \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        loading={loading}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={supports}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SupportTable;\r\n"]},"metadata":{},"sourceType":"module"}