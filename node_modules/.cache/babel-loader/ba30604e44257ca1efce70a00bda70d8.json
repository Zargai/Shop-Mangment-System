{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abrar khan Zargai\\\\Desktop\\\\NUML-BMS\\\\project\\\\BUS-API-Dashboard\\\\src\\\\pages\\\\dashboard\\\\students\\\\Students.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Typography, Form, message } from \"antd\";\nimport StudentModal from \"./StudentModal\";\nimport StudentTable from \"./StudentTable\";\nimport { StudentApi } from \"../../../services/api\";\nimport { DepartmentApi } from \"../../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Students() {\n  _s();\n\n  const [form] = Form.useForm();\n  const {\n    Title\n  } = Typography;\n  const [students, setStudents] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [editingKey, setEditingKey] = useState(\"\");\n  const [mounted, setMounted] = useState(true);\n  const [visible, setVisible] = useState(false);\n  const [departments, setDepartments] = useState([]);\n\n  const getStudents = async () => {\n    try {\n      setloading(true);\n      const response = await StudentApi.getAll();\n      console.log('re', response);\n      const newResponse = [...response.data].map(student => {\n        const object = { ...student,\n          key: student._id\n        };\n        return object;\n      });\n      setStudents(newResponse);\n      setloading(false);\n      console.log(response.data);\n    } catch (error) {\n      message.error(error.message);\n      console.log(error.message);\n    }\n  };\n\n  const updateStudent = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...students];\n      const index = newData.findIndex(item => key === item.key); // console.log(name);\n\n      if (index > -1) {\n        const item = newData[index];\n        console.log('ITEM', item);\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setEditingKey(\"\");\n        let {\n          name,\n          password,\n          phone,\n          sex,\n          slipVerified,\n          verified\n        } = newData[index];\n        slipVerified = slipVerified === 'true' ? true : false;\n        verified = verified === 'true' ? true : false;\n        let req = {\n          name,\n          password,\n          phone,\n          sex,\n          slipVerified,\n          verified\n        }; // req['department'] = req.department._id;\n\n        console.log('request', req);\n        console.log('key', key);\n        const response = await StudentApi.update(key, req);\n\n        if (response) {\n          getStudents();\n          setDisable(false);\n          message.success(\"Item updated\");\n        }\n      } else {\n        newData.push(row);\n        setStudents(newData);\n        setEditingKey(\"\");\n      }\n    } catch (error) {\n      setDisable(false);\n      message.error(\"Email already exist\", error);\n      console.log(\"Validate Failed:\", error);\n    }\n  };\n\n  const deleteStudent = async key => {\n    try {\n      const newData = [...students];\n      const index = newData.findIndex(item => key === item.key);\n      const response = await StudentApi.delete(key);\n\n      if (response) {\n        getStudents();\n        message.warning(\"Item deleted\");\n      }\n\n      newData.splice(index, 1);\n      setStudents(newData);\n      setEditingKey(\"\");\n    } catch (error) {\n      message.error(error.message);\n      console.log(\"Validate Failed:\", error);\n    }\n  };\n\n  const submitStudent = async values => {\n    try {\n      console.log('response', values);\n      const response = await StudentApi.create(values);\n\n      if (response) {\n        getStudents();\n        message.success(\"Item Added\");\n      }\n\n      setDisable(false);\n      setVisible(false);\n    } catch (error) {\n      message.error(\"Email already exist\");\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const response = async () => {\n      try {\n        const myDepartments = await DepartmentApi.getAll();\n        setDepartments(myDepartments.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (mounted === true) {\n      getStudents();\n    }\n\n    response();\n    return () => {\n      setMounted(false);\n    };\n  }, [setMounted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      children: \"Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        float: \"right\",\n        marginBottom: \"10px\"\n      },\n      type: \"primary\",\n      disabled: disable,\n      onClick: () => {\n        setVisible(true);\n        setDisable(true);\n      },\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StudentTable, {\n      students: students,\n      loading: loading,\n      editingKey: editingKey,\n      setEditingKey: setEditingKey,\n      deleted: deleteStudent,\n      editSave: updateStudent,\n      form: form,\n      setDisable: setDisable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StudentModal, {\n      visible: visible,\n      onCreate: values => submitStudent(values),\n      departments: departments,\n      onCancel: () => {\n        setVisible(false);\n        setDisable(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Students, \"Pxm7nz92o6crHUIgyc+oCR6S8ng=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["C:/Users/Abrar khan Zargai/Desktop/NUML-BMS/project/BUS-API-Dashboard/src/pages/dashboard/students/Students.js"],"names":["React","useEffect","useState","Button","Typography","Form","message","StudentModal","StudentTable","StudentApi","DepartmentApi","Students","form","useForm","Title","students","setStudents","loading","setloading","disable","setDisable","editingKey","setEditingKey","mounted","setMounted","visible","setVisible","departments","setDepartments","getStudents","response","getAll","console","log","newResponse","data","map","student","object","key","_id","error","updateStudent","row","validateFields","newData","index","findIndex","item","splice","name","password","phone","sex","slipVerified","verified","req","update","success","push","deleteStudent","delete","warning","submitStudent","values","create","myDepartments","float","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Typography, Form, message } from \"antd\";\r\nimport StudentModal from \"./StudentModal\";\r\nimport StudentTable from \"./StudentTable\";\r\nimport { StudentApi } from \"../../../services/api\";\r\nimport { DepartmentApi } from \"../../../services/api\";\r\n\r\nfunction Students() {\r\n  const [form] = Form.useForm();\r\n  const { Title } = Typography;\r\n  const [students, setStudents] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [mounted, setMounted] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  const getStudents = async () => {\r\n    try {\r\n      setloading(true);\r\n      const response = await StudentApi.getAll();\r\n      console.log('re', response);\r\n      const newResponse = [...response.data].map((student) => {\r\n        const object = {\r\n          ...student,\r\n          key: student._id,\r\n        };\r\n        return object;\r\n      });\r\n      setStudents(newResponse);\r\n      setloading(false);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const updateStudent = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...students];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      // console.log(name);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        console.log('ITEM',item);\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setEditingKey(\"\");\r\n\r\n        let { name, password, phone, sex, slipVerified,verified} = newData[index];\r\n\r\n        slipVerified = slipVerified === 'true'? true:false;\r\n        verified = verified === 'true'? true:false;\r\n      let req=  {name, password, phone, sex, slipVerified,verified };\r\n        // req['department'] = req.department._id;\r\n        console.log('request', req);\r\n        console.log('key', key);\r\n        const response = await StudentApi.update(key, req);\r\n\r\n        if (response) {\r\n          getStudents();\r\n          setDisable(false);\r\n          message.success(\"Item updated\");\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setStudents(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (error) {\r\n      setDisable(false);\r\n      message.error(\"Email already exist\", error);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteStudent = async (key) => {\r\n    try {\r\n      const newData = [...students];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      const response = await StudentApi.delete(key);\r\n\r\n      if (response) {\r\n        getStudents();\r\n        message.warning(\"Item deleted\");\r\n      }\r\n\r\n      newData.splice(index, 1);\r\n\r\n      setStudents(newData);\r\n      setEditingKey(\"\");\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const submitStudent = async (values) => {\r\n    try {\r\n      console.log('response', values);\r\n      const response = await StudentApi.create(values);\r\n\r\n      if (response) {\r\n        getStudents();\r\n        message.success(\"Item Added\");\r\n      }\r\n      setDisable(false);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      message.error(\"Email already exist\");\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const response = async () => {\r\n      try {\r\n        const myDepartments = await DepartmentApi.getAll();\r\n        setDepartments(myDepartments.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (mounted === true) {\r\n      getStudents();\r\n    }\r\n    response();\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, [setMounted]);\r\n\r\n  return (\r\n    <div>\r\n      <Title level={2}>Students</Title>\r\n      <Button\r\n        style={{\r\n          float: \"right\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        type=\"primary\"\r\n        disabled={disable}\r\n        onClick={() => {\r\n          setVisible(true);\r\n          setDisable(true);\r\n        }}\r\n      >\r\n        Add Item\r\n      </Button>\r\n      {/* <Table bordered columns={columns} dataSource={students} /> */}\r\n\r\n      <StudentTable\r\n        students={students}\r\n        loading={loading}\r\n        editingKey={editingKey}\r\n        setEditingKey={setEditingKey}\r\n        deleted={deleteStudent}\r\n        editSave={updateStudent}\r\n        form={form}\r\n        setDisable={setDisable}\r\n      />\r\n      <StudentModal\r\n        visible={visible}\r\n        onCreate={(values) => submitStudent(values)}\r\n        departments={departments}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n          setDisable(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Students;\r\n"]},"metadata":{},"sourceType":"module"}