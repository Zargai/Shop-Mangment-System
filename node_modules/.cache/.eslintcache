[{"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\index.js":"1","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\reportWebVitals.js":"2","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\App.js":"3","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\Login.js":"4","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\AppLayout.js":"5","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\services\\api.js":"6","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\components\\AppHeader.js":"7","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\components\\Sidebar.js":"8","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\ContentDiv.js":"9","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\buses\\Buses.js":"10","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\admin\\Admin.js":"11","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\departments\\Departments.js":"12","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\supports\\Supports.js":"13","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\routes\\Routes.js":"14","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\routes\\RouteDetail.js":"15","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\students\\Students.js":"16","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\drivers\\Drivers.js":"17","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\dashboard\\Dashboard.js":"18","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\drivers\\DriverTable.js":"19","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\students\\StudentModal.js":"20","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\routes\\RouteTable.js":"21","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\routes\\RouteModal.js":"22","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\supports\\SupportTable.js":"23","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\supports\\SupportModal.js":"24","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\students\\StudentTable.js":"25","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\departments\\DepartmentTable.js":"26","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\drivers\\DriverModal.js":"27","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\departments\\DepartmentModal.js":"28","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\buses\\BusTable.js":"29","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\buses\\BusModal.js":"30","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\routes\\data.js":"31","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\dashboard\\Statistics.js":"32","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\dashboard\\Charts.js":"33","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\dashboard\\Users.js":"34"},{"size":379,"mtime":1633813618415,"results":"35","hashOfConfig":"36"},{"size":375,"mtime":1621768536895,"results":"37","hashOfConfig":"36"},{"size":390,"mtime":1633813713180,"results":"38","hashOfConfig":"36"},{"size":3445,"mtime":1633816705433,"results":"39","hashOfConfig":"36"},{"size":2049,"mtime":1633895629914,"results":"40","hashOfConfig":"36"},{"size":3297,"mtime":1633804787202,"results":"41","hashOfConfig":"36"},{"size":664,"mtime":1633898772608,"results":"42","hashOfConfig":"36"},{"size":2729,"mtime":1633899333716,"results":"43","hashOfConfig":"36"},{"size":1039,"mtime":1633889065655,"results":"44","hashOfConfig":"36"},{"size":5177,"mtime":1633817009012,"results":"45","hashOfConfig":"36"},{"size":2234,"mtime":1622215027154,"results":"46","hashOfConfig":"36"},{"size":4329,"mtime":1621768536868,"results":"47","hashOfConfig":"36"},{"size":4324,"mtime":1622046463720,"results":"48","hashOfConfig":"36"},{"size":4626,"mtime":1621768536882,"results":"49","hashOfConfig":"36"},{"size":4706,"mtime":1621768536878,"results":"50","hashOfConfig":"36"},{"size":4961,"mtime":1621923237165,"results":"51","hashOfConfig":"36"},{"size":5061,"mtime":1622020694072,"results":"52","hashOfConfig":"36"},{"size":1372,"mtime":1633892338876,"results":"53","hashOfConfig":"36"},{"size":4978,"mtime":1621768536874,"results":"54","hashOfConfig":"36"},{"size":4368,"mtime":1621768536888,"results":"55","hashOfConfig":"36"},{"size":5839,"mtime":1622213720929,"results":"56","hashOfConfig":"36"},{"size":5241,"mtime":1621768536879,"results":"57","hashOfConfig":"36"},{"size":5199,"mtime":1622046619148,"results":"58","hashOfConfig":"36"},{"size":1215,"mtime":1621768536892,"results":"59","hashOfConfig":"36"},{"size":7386,"mtime":1622107314751,"results":"60","hashOfConfig":"36"},{"size":3975,"mtime":1621768536867,"results":"61","hashOfConfig":"36"},{"size":2380,"mtime":1622017016000,"results":"62","hashOfConfig":"36"},{"size":1224,"mtime":1621768536865,"results":"63","hashOfConfig":"36"},{"size":6362,"mtime":1622215988318,"results":"64","hashOfConfig":"36"},{"size":2888,"mtime":1621768536857,"results":"65","hashOfConfig":"36"},{"size":170,"mtime":1621768536885,"results":"66","hashOfConfig":"36"},{"size":6538,"mtime":1633895784713,"results":"67","hashOfConfig":"36"},{"size":1295,"mtime":1633892352882,"results":"68","hashOfConfig":"36"},{"size":4087,"mtime":1633895846535,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1ebboc",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"72"},"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\index.js",[],["159","160"],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\reportWebVitals.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\App.js",["161"],"import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Login from \"./pages/Login\";\r\nimport AppLayout from \"./pages/AppLayout\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Switch>     \r\n        <Route path=\"/app\"  component={AppLayout} />\r\n        <Route path=\"/\" component={Login} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\Login.js",["162","163","164","165","166"],"import { Form, Input, Button, message,Spin } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Admin } from \"../services/api\";\r\nimport numl from '../numl.jpg'\r\nimport \"../Login.css\";\r\n\r\n\r\nfunction Login() {\r\n  \r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let loggedIn = true;\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token !== null && loggedIn === true) {\r\n      setIsLoggedIn(true);\r\n    }\r\n\r\n    return () => (loggedIn = false);\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      setLoading(true);\r\n      // const response = await Admin.signIn(values);\r\n      // if (response) {\r\n      //   localStorage.setItem(\"token\", response.data.token);\r\n      //   localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n      //   message.success(\"Logged in!\");\r\n      //   setIsLoggedIn(true);\r\n      //   setLoading(false);\r\n      // }\r\n         localStorage.setItem(\"token\", \"response.data.token\");\r\n         localStorage.setItem(\"user\", \"JSON.stringify(response.data.user)\");\r\n        message.success(\"Logged in!\");\r\n        setIsLoggedIn(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"Incorrect email or password\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      {isLoggedIn ? (\r\n        <Redirect to=\"/app\" />\r\n      ) : loading ? (\r\n        <Spin\r\n          size=\"large\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"47%\",\r\n            right: \"50%\",\r\n            transform: \"translate(0, -50%)\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <div class='loginbody' >\r\n           <div class=\"logincontainer\" id=\"logincontainer\">\r\n               \r\n                <div class=\"loginform-container loginsign-in-container\">\r\n                    <div class=\"loginform\">\r\n                        <h1 class=\"loginh1\">Sign In</h1>\r\n                     \r\n                       <br/>\r\n                        <input type=\"email\" placeholder=\"Email\" class='logininput'/>\r\n                        <input type=\"password\" placeholder=\"Password\" class='logininput' />\r\n                       <br/>\r\n                        \r\n                        <button class=\"loginbuttonn\" onClick={() => onFinish()}>Sign In</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"loginoverlay-container\">\r\n                    <div class=\"loginoverlay\">\r\n                        <div class=\"loginoverlay-panel overlay-left\">\r\n                            <h1 class=\"loginh1\">Welcome Back!</h1>\r\n                            <p class=\"loginp\">To keep connected with us please login with your personal info</p>\r\n                            <button class=\"loginbuttonn\" >Sign In</button>\r\n                        </div>\r\n                        <div class=\"loginoverlay-panel loginoverlay-right\">\r\n                            <h1>Inventry Mangment System</h1>\r\n                            <p>Enter your personal details and start journey with us</p>\r\n                         \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       {/* Login Container Started Here  */}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\AppLayout.js",["167","168"],"import { Layout, Spin } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport AppHeader from \"../components/AppHeader\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport ContentDiv from \"./dashboard/ContentDiv\";\r\nimport '../App.css'\r\nimport numl from '../numl.jpg'\r\n\r\nconst { Header, Content, Sider } = Layout;\r\nfunction AppLayout() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loginHandler = () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token == null) return history.push(\"/login\");\r\n    };\r\n    return loginHandler();\r\n  }, [history]);\r\n\r\n  return loading ? (\r\n    <Spin\r\n      size=\"large\"\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"47%\",\r\n        right: \"50%\",\r\n        transform: \"translate(0, -50%)\",\r\n      }}\r\n    />\r\n  ) : (\r\n    <Layout   style={{backgroundAttachment:'fixed'}}>\r\n   \r\n      <Layout   style={{backgroundAttachment:'fixed'}}>\r\n        <Sider\r\n          style={{\r\n            overflow: \"auto\",\r\n            height: \"auto\",\r\n            left: 0,\r\n            \r\n          }}\r\n        >\r\n          <Sidebar />\r\n        </Sider>\r\n        <Layout\r\n        style={{backgroundAttachment:'fixed'}}\r\n        >\r\n         \r\n            <AppHeader />\r\n           \r\n          <Content\r\n            style={{\r\n              // backgroundImage:`url(${numl})`,\r\n              // backgroundSize:\"cover\",\r\n              // backgroundPosition:\"center\",\r\n              // backgroundAttachment:\"fixed\",\r\n              height:\"auto\",\r\n              width:'auto',\r\n              margin: 0,\r\n              minHeight: 599,\r\n              align: \"center\",\r\n              \r\n              }}\r\n          >\r\n              <div class=\"bg-gradient-primary\">\r\n            <ContentDiv  />\r\n              </div>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AppLayout;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\services\\api.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\components\\AppHeader.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\components\\Sidebar.js",["169","170","171"],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\ContentDiv.js",["172","173"],"import Buses from \"./buses/Buses\";\r\n\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Admin from \"./admin/Admin\";\r\nimport Students from \"./students/Students\";\r\nimport Drivers from \"./drivers/Drivers\";\r\nimport Departments from \"./departments/Departments\";\r\nimport Supports from \"./supports/Supports\";\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport Routes from \"./routes/Routes\";\r\nimport RouteDetails from \"./routes/RouteDetail\";\r\n\r\nconst ContentDiv = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/app\" exact component={Dashboard} />\r\n        <Route path=\"/app/buses\" component={Buses} />\r\n        <Route path=\"/app/departments\" component={Departments} />\r\n        <Route path=\"/app/drivers\" component={Drivers} />\r\n        <Route path=\"/app/students\" component={Students} />\r\n        <Route path=\"/app/routes\" component={Routes} />\r\n        <Route path=\"/app/supports\" component={Supports} />\r\n      </Switch>\r\n      <Redirect to=\"/app\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentDiv;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\buses\\Buses.js",["174","175","176"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Typography, Form, message } from \"antd\";\r\nimport BusModal from \"./BusModal\";\r\nimport BusTable from \"./BusTable\";\r\nimport { BusApi, DriverApi, RouteApi } from \"../../../services/api\";\r\n\r\nfunction Buses() {\r\n  const [form] = Form.useForm();\r\n  const { Title } = Typography;\r\n  const [buses, setBuses] = useState([]);\r\n  const [routes, setRoutes] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [mounted, setMounted] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const getBuses = async () => {\r\n    try {\r\n      setloading(true);\r\n      const response = await BusApi.getAll();\r\n      const newResponse = [...response.data].map((bus) => {\r\n        const object = {\r\n          ...bus,\r\n          key: bus._id,\r\n        };\r\n        return object;\r\n      });\r\n\r\n      setBuses(newResponse);\r\n      setloading(false);\r\n      console.log(\"Response:\", newResponse);\r\n      console.log(\"BUSES\", buses);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      message.error(error.message);\r\n    }\r\n  };\r\n\r\n  const updateBus = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...buses];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      // console.log(name);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setEditingKey(\"\");\r\n        console.log(\"NewBuses\", buses);\r\n        console.log(\"index\", index);\r\n        console.log(\"Newdata\", newData);\r\n\r\n        const { name, capacity, assignedDriver, assignedRoute } = newData[\r\n          index\r\n        ];\r\n        console.log(name, capacity, assignedDriver, assignedRoute);\r\n        console.log(\"key ==>\",key);\r\n        const response = await BusApi.update(key, {\r\n          name,\r\n          capacity,\r\n          assignedDriver,\r\n          assignedRoute,\r\n        });\r\n\r\n        if (response) {\r\n          getBuses();\r\n          setDisable(false);\r\n          message.success(\"Item updated\");\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setBuses(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (error) {\r\n      setDisable(false);\r\n      message.error(error.message);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteBus = async (key) => {\r\n    try {\r\n      const newData = [...buses];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      const response = await BusApi.delete(key);\r\n\r\n      if (response) {\r\n        getBuses();\r\n        message.warning(\"Item deleted\");\r\n      }\r\n\r\n      newData.splice(index, 1);\r\n\r\n      setBuses(newData);\r\n      setEditingKey(\"\");\r\n    } catch (error) {\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const submitBus = async (values) => {\r\n    console.log(\"values\", values);\r\n    try {\r\n      const response = await BusApi.create(values);\r\n\r\n      if (response) {\r\n        getBuses();\r\n        message.success(\"Item Added\");\r\n      }\r\n      setDisable(false);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.response.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const response = async () => {\r\n      try {\r\n        const myRoutes = await RouteApi.getAll();\r\n        const myDrivers = await DriverApi.getAll();\r\n\r\n        setRoutes(myRoutes.data);\r\n        setDrivers(myDrivers.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    response();\r\n    getBuses();\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  const data = buses.map((bus) => ({\r\n    _id: bus._id,\r\n    key: bus.key,\r\n    name: bus.name,\r\n    capacity: bus.capacity,\r\n    assignedRoute_ID: bus.assignedRoute?.name,\r\n    assignedDriver_ID: bus.assignedDriver?.name,\r\n    assignedRoute: bus.assignedRoute?._id,\r\n    assignedDriver: bus.assignedDriver?._id,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <Button\r\n        style={{\r\n          float: \"right\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        type=\"primary\"\r\n        disabled={disable}\r\n        onClick={() => {\r\n          setVisible(true);\r\n          setDisable(true);\r\n        }}\r\n      >\r\n        Add Item\r\n      </Button>\r\n      {/* <Table bordered columns={columns} dataSource={buses} /> */}\r\n\r\n      <BusTable\r\n        data={data}\r\n        loading={loading}\r\n        editingKey={editingKey}\r\n        setEditingKey={setEditingKey}\r\n        deleted={deleteBus}\r\n        editSave={updateBus}\r\n        form={form}\r\n        setDisable={setDisable}\r\n        routes={routes}\r\n        drivers={drivers}\r\n      />\r\n      <BusModal\r\n        visible={visible}\r\n        routes={routes}\r\n        drivers={drivers}\r\n        onCreate={(values) => submitBus(values)}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n          setDisable(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Buses;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\admin\\Admin.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\departments\\Departments.js",["177"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Typography, Form, message } from \"antd\";\r\nimport DepartmentModal from \"./DepartmentModal\";\r\nimport DepartmentTable from \"./DepartmentTable\";\r\nimport { DepartmentApi } from \"../../../services/api\";\r\nfunction Departments() {\r\n  const [form] = Form.useForm();\r\n  const { Title } = Typography;\r\n  const [departments, setDepartments] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [mounted, setMounted] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const getDepartments = async () => {\r\n    try {\r\n      setloading(true);\r\n\r\n      const response = await DepartmentApi.getAll();\r\n\r\n      const newResponse = [...response.data].map((department) => {\r\n        const object = {\r\n          ...department,\r\n          key: department._id,\r\n        };\r\n        return object;\r\n      });\r\n\r\n      console.log(\"newResponse\", newResponse);\r\n      setDepartments(newResponse);\r\n      setloading(false);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const updateDepartment = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...departments];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      // console.log(name);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setEditingKey(\"\");\r\n\r\n        const { title } = newData[index];\r\n\r\n        const response = await DepartmentApi.update(key, {\r\n          title,\r\n        });\r\n\r\n        if (response) {\r\n          getDepartments();\r\n          setDisable(false);\r\n          message.success(\"Item updated\");\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setDepartments(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (error) {\r\n      setDisable(false);\r\n      message.error(\"Email already exist\");\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = async (key) => {\r\n    try {\r\n      const newData = [...departments];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      const response = await DepartmentApi.delete(key);\r\n\r\n      if (response) {\r\n        getDepartments();\r\n        message.warning(\"Item deleted\");\r\n      }\r\n\r\n      newData.splice(index, 1);\r\n\r\n      setDepartments(newData);\r\n      setEditingKey(\"\");\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const submitDepartment = async (values) => {\r\n    console.log(\"Values\", values);\r\n    try {\r\n      const response = await DepartmentApi.create(values);\r\n\r\n      if (response) {\r\n        getDepartments();\r\n        message.success(\"Item Added\");\r\n      }\r\n      setDisable(false);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n\r\n\r\n    if (mounted === true) {\r\n      getDepartments();\r\n    }\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, [setMounted]);\r\n\r\n  return (\r\n    <div>\r\n      <Title level={2}>Departments</Title>\r\n      <Button\r\n        style={{\r\n          float: \"right\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        type=\"primary\"\r\n        disabled={disable}\r\n        onClick={() => {\r\n          setVisible(true);\r\n          setDisable(true);\r\n        }}\r\n      >\r\n        Add Item\r\n      </Button>\r\n      {/* <Table bordered columns={columns} dataSource={departments} /> */}\r\n\r\n      <DepartmentTable\r\n        departments={departments}\r\n        loading={loading}\r\n        editingKey={editingKey}\r\n        setEditingKey={setEditingKey}\r\n        deleted={deleteDepartment}\r\n        editSave={updateDepartment}\r\n        form={form}\r\n        setDisable={setDisable}\r\n      />\r\n      <DepartmentModal\r\n        visible={visible}\r\n        onCreate={(values) => submitDepartment(values)}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n          setDisable(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Departments;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\supports\\Supports.js",["178","179","180"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Typography, Form, message } from \"antd\";\r\nimport SupportModal from \"./SupportModal\";\r\nimport SupportTable from \"./SupportTable\";\r\nimport { SupportApi } from \"../../../services/api\";\r\nfunction Supports() {\r\n  const [form] = Form.useForm();\r\n  const { Title } = Typography;\r\n  const [supports, setSupports] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [mounted, setMounted] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const getSupports = async () => {\r\n    try {\r\n      setloading(true);\r\n\r\n      const response = await SupportApi.getAll();\r\n\r\n      const newResponse = [...response.data].map((support) => {\r\n        const object = {\r\n          ...support,\r\n          key: support._id,\r\n        };\r\n        return object;\r\n      });\r\n\r\n      console.log(\"newResponse\", newResponse);\r\n     \r\n      setSupports(newResponse);\r\n      setloading(false);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const updateSupport = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...supports];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      // console.log(name);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setEditingKey(\"\");\r\n\r\n        // const { title } = newData[index];\r\n        console.log('newData', newData.values())\r\n\r\n        const response = await SupportApi.update(key, {\r\n          newData,\r\n        });\r\n\r\n        if (response) {\r\n          getSupports();\r\n          setDisable(false);\r\n          message.success(\"Item updated\");\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setSupports(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (error) {\r\n      setDisable(false);\r\n      console.log(\"ERRRRORRR\", error)\r\n      message.error(\"Email already exist\");\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteSupport = async (key) => {\r\n    try {\r\n      const newData = [...supports];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      const response = await SupportApi.delete(key);\r\n\r\n      if (response) {\r\n        getSupports();\r\n        message.warning(\"Item deleted\");\r\n      }\r\n\r\n      newData.splice(index, 1);\r\n\r\n      setSupports(newData);\r\n      setEditingKey(\"\");\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const submitSupport = async (values) => {\r\n    console.log(\"Values\", values);\r\n    try {\r\n      const response = await SupportApi.create(values);\r\n\r\n      if (response) {\r\n        getSupports();\r\n        message.success(\"Item Added\");\r\n      }\r\n      setDisable(false);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n\r\n\r\n    if (mounted === true) {\r\n      getSupports();\r\n    }\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, [setMounted]);\r\n\r\n  return (\r\n    <div>\r\n      <Title level={2}>Supports</Title>\r\n      {/* <Button\r\n        style={{\r\n          float: \"right\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        type=\"primary\"\r\n        disabled={disable}\r\n        onClick={() => {\r\n          setVisible(true);\r\n          setDisable(true);\r\n        }}\r\n      >\r\n        Add Item\r\n      </Button> */}\r\n      {/* <Table bordered columns={columns} dataSource={supports} /> */}\r\n\r\n      <SupportTable\r\n        supports={supports}\r\n        loading={loading}\r\n        editingKey={editingKey}\r\n        setEditingKey={setEditingKey}\r\n        deleted={deleteSupport}\r\n        editSave={updateSupport}\r\n        form={form}\r\n        setDisable={setDisable}\r\n      />\r\n      <SupportModal\r\n        visible={visible}\r\n        onCreate={(values) => submitSupport(values)}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n          setDisable(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Supports;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\routes\\Routes.js",["181","182"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Typography, Form, message } from \"antd\";\r\nimport RouteModal from \"./RouteModal\";\r\nimport { RouteApi } from \"../../../services/api\";\r\nimport RouteTable from \"./RouteTable\";\r\nfunction Routes() {\r\n  const [form] = Form.useForm();\r\n  const { Title } = Typography;\r\n  const [routes, setRoutes] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [mounted, setMounted] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n  const [markers, setMarkers] = useState({\r\n    stops:[],\r\n    title:''\r\n  });\r\n\r\n  const getRoutes = async () => {\r\n    try {\r\n      setloading(true);\r\n      const response = await RouteApi.getAll();\r\n\r\n      console.log(\"response\", response);\r\n\r\n      const newResponse = [...response.data].map((route) => {\r\n        const object = {\r\n          ...route,\r\n          key: route._id,\r\n        };\r\n        return object;\r\n      });\r\n\r\n      console.log(\"newResponse\");\r\n\r\n      setRoutes(newResponse);\r\n      setloading(false);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const updateRoute = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...routes];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      // console.log(name);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setEditingKey(\"\");\r\n\r\n        const {\r\n          name,\r\n          stops: { title },\r\n        } = newData[index];\r\n\r\n        const response = await RouteApi.update(key, {\r\n          name,\r\n          title,\r\n        });\r\n\r\n        if (response) {\r\n          getRoutes();\r\n          setDisable(false);\r\n          message.success(\"Item updated\");\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setRoutes(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (error) {\r\n      setDisable(false);\r\n      message.error(\"Email already exist\");\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteRoute = async (key) => {\r\n    try {\r\n      const newData = [...routes];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      const response = await RouteApi.delete(key);\r\n\r\n      if (response) {\r\n        getRoutes();\r\n        message.warning(\"Item deleted\");\r\n      }\r\n\r\n      newData.splice(index, 1);\r\n\r\n      setRoutes(newData);\r\n      setEditingKey(\"\");\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const submitRoute = async (values) => {\r\n    // const newArray = {\r\n    //   ...values,\r\n    //   stops: [...markers],\r\n    // };\r\n    const newArray = values;\r\n    console.log(\"newArray\", newArray);\r\n    try {\r\n      const response = await RouteApi.create(newArray);\r\n\r\n      if (response) {\r\n        getRoutes();\r\n        message.success(\"Item Added\");\r\n      }\r\n      setDisable(false);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (mounted === true) {\r\n      getRoutes();\r\n    }\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, [setMounted]);\r\n\r\n  const data = [];\r\n\r\n  return (\r\n    <div>\r\n      <Title level={2}>Routes</Title>\r\n      <Button\r\n        style={{\r\n          float: \"right\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        type=\"primary\"\r\n        disabled={disable}\r\n        onClick={() => {\r\n          setVisible(true);\r\n          setDisable(true);\r\n        }}\r\n      >\r\n        Add Item\r\n      </Button>\r\n      {/* <Table bordered columns={columns} dataSource={routes} /> */}\r\n\r\n      <RouteTable\r\n        routes={routes || []}\r\n        loading={loading}\r\n        editingKey={editingKey}\r\n        setEditingKey={setEditingKey}\r\n        deleted={deleteRoute}\r\n        editSave={updateRoute}\r\n        form={form}\r\n        setDisable={setDisable}\r\n      />\r\n      <RouteModal\r\n        visible={visible}\r\n        markers={markers}\r\n        width={1000}\r\n        setMarkers={setMarkers}\r\n        onCreate={(values) => {\r\n          console.log(\"Success:\", values);\r\n\r\n          return submitRoute(values);\r\n        }}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n          setDisable(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Routes;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\routes\\RouteDetail.js",["183","184"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Typography, Form, message } from \"antd\";\r\nimport RouteModal from \"./RouteModal\";\r\nimport { RouteApi } from \"../../../services/api\";\r\nimport RouteTable from \"./RouteTable\";\r\nfunction RouteDetails() {\r\n  const [form] = Form.useForm();\r\n  const { Title } = Typography;\r\n  const [RouteDetails, setRouteDetails] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [mounted, setMounted] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n  const [markers, setMarkers] = useState({\r\n    stops:[],\r\n    title:''\r\n  });\r\n\r\n  const getRouteDetails = async () => {\r\n    try {\r\n      setloading(true);\r\n      const response = await RouteApi.getAll();\r\n\r\n      console.log(\"response\", response);\r\n\r\n      const newResponse = [...response.data].map((route) => {\r\n        const object = {\r\n          ...route,\r\n          key: route._id,\r\n        };\r\n        return object;\r\n      });\r\n\r\n      console.log(\"newResponse\");\r\n\r\n      setRouteDetails(newResponse);\r\n      setloading(false);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const updateRoute = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...RouteDetails];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      // console.log(name);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setEditingKey(\"\");\r\n\r\n        const {\r\n          name,\r\n          stops: { title },\r\n        } = newData[index];\r\n\r\n        const response = await RouteApi.update(key, {\r\n          name,\r\n          title,\r\n        });\r\n\r\n        if (response) {\r\n          getRouteDetails();\r\n          setDisable(false);\r\n          message.success(\"Item updated\");\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setRouteDetails(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (error) {\r\n      setDisable(false);\r\n      message.error(\"Email already exist\");\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteRoute = async (key) => {\r\n    try {\r\n      const newData = [...RouteDetails];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      const response = await RouteApi.delete(key);\r\n\r\n      if (response) {\r\n        getRouteDetails();\r\n        message.warning(\"Item deleted\");\r\n      }\r\n\r\n      newData.splice(index, 1);\r\n\r\n      setRouteDetails(newData);\r\n      setEditingKey(\"\");\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const submitRoute = async (values) => {\r\n    // const newArray = {\r\n    //   ...values,\r\n    //   stops: [...markers],\r\n    // };\r\n    const newArray = values;\r\n    console.log(\"newArray\", newArray);\r\n    try {\r\n      const response = await RouteApi.create(newArray);\r\n\r\n      if (response) {\r\n        getRouteDetails();\r\n        message.success(\"Item Added\");\r\n      }\r\n      setDisable(false);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (mounted === true) {\r\n      getRouteDetails();\r\n    }\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, [setMounted]);\r\n\r\n  const data = [];\r\n\r\n  return (\r\n    <div>\r\n      <Title level={2}>RouteDetails</Title>\r\n      <Button\r\n        style={{\r\n          float: \"right\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        type=\"primary\"\r\n        disabled={disable}\r\n        onClick={() => {\r\n          setVisible(true);\r\n          setDisable(true);\r\n        }}\r\n      >\r\n        Add Item\r\n      </Button>\r\n      {/* <Table bordered columns={columns} dataSource={RouteDetails} /> */}\r\n\r\n      <RouteTable\r\n        RouteDetails={RouteDetails}\r\n        loading={loading}\r\n        editingKey={editingKey}\r\n        setEditingKey={setEditingKey}\r\n        deleted={deleteRoute}\r\n        editSave={updateRoute}\r\n        form={form}\r\n        setDisable={setDisable}\r\n      />\r\n      <RouteModal\r\n        visible={visible}\r\n        markers={markers}\r\n        setMarkers={setMarkers}\r\n        onCreate={(values) => {\r\n          console.log(\"Success:\", values);\r\n\r\n          return submitRoute(values);\r\n        }}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n          setDisable(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default RouteDetails;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\students\\Students.js",["185"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Typography, Form, message } from \"antd\";\r\nimport StudentModal from \"./StudentModal\";\r\nimport StudentTable from \"./StudentTable\";\r\nimport { StudentApi } from \"../../../services/api\";\r\nimport { DepartmentApi } from \"../../../services/api\";\r\n\r\nfunction Students() {\r\n  const [form] = Form.useForm();\r\n  const { Title } = Typography;\r\n  const [students, setStudents] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [mounted, setMounted] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  const getStudents = async () => {\r\n    try {\r\n      setloading(true);\r\n      const response = await StudentApi.getAll();\r\n      console.log('re', response);\r\n      const newResponse = [...response.data].map((student) => {\r\n        const object = {\r\n          ...student,\r\n          key: student._id,\r\n        };\r\n        return object;\r\n      });\r\n      setStudents(newResponse);\r\n      setloading(false);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const updateStudent = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...students];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      // console.log(name);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        console.log('ITEM',item);\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setEditingKey(\"\");\r\n\r\n        let { name, password, phone, sex, slipVerified,verified} = newData[index];\r\n\r\n        slipVerified = slipVerified === 'true'? true:false;\r\n        verified = verified === 'true'? true:false;\r\n      let req=  {name, password, phone, sex, slipVerified,verified };\r\n        // req['department'] = req.department._id;\r\n        console.log('request', req);\r\n        console.log('key', key);\r\n        const response = await StudentApi.update(key, req);\r\n\r\n        if (response) {\r\n          getStudents();\r\n          setDisable(false);\r\n          message.success(\"Item updated\");\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setStudents(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (error) {\r\n      setDisable(false);\r\n      message.error(\"Email already exist\", error);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteStudent = async (key) => {\r\n    try {\r\n      const newData = [...students];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      const response = await StudentApi.delete(key);\r\n\r\n      if (response) {\r\n        getStudents();\r\n        message.warning(\"Item deleted\");\r\n      }\r\n\r\n      newData.splice(index, 1);\r\n\r\n      setStudents(newData);\r\n      setEditingKey(\"\");\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const submitStudent = async (values) => {\r\n    try {\r\n      console.log('response', values);\r\n      const response = await StudentApi.create(values);\r\n\r\n      if (response) {\r\n        getStudents();\r\n        message.success(\"Item Added\");\r\n      }\r\n      setDisable(false);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      message.error(\"Email already exist\");\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const response = async () => {\r\n      try {\r\n        const myDepartments = await DepartmentApi.getAll();\r\n        setDepartments(myDepartments.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (mounted === true) {\r\n      getStudents();\r\n    }\r\n    response();\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, [setMounted]);\r\n\r\n  return (\r\n    <div>\r\n      <Title level={2}>Students</Title>\r\n      <Button\r\n        style={{\r\n          float: \"right\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        type=\"primary\"\r\n        disabled={disable}\r\n        onClick={() => {\r\n          setVisible(true);\r\n          setDisable(true);\r\n        }}\r\n      >\r\n        Add Item\r\n      </Button>\r\n      {/* <Table bordered columns={columns} dataSource={students} /> */}\r\n\r\n      <StudentTable\r\n        students={students}\r\n        loading={loading}\r\n        editingKey={editingKey}\r\n        setEditingKey={setEditingKey}\r\n        deleted={deleteStudent}\r\n        editSave={updateStudent}\r\n        form={form}\r\n        setDisable={setDisable}\r\n      />\r\n      <StudentModal\r\n        visible={visible}\r\n        onCreate={(values) => submitStudent(values)}\r\n        departments={departments}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n          setDisable(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Students;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\drivers\\Drivers.js",["186","187"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Typography, Form, message } from \"antd\";\r\nimport DriverModal from \"./DriverModal\";\r\nimport DriverTable from \"./DriverTable\";\r\nimport { BusApi, DriverApi } from \"../../../services/api\";\r\nfunction Drivers() {\r\n  const [form] = Form.useForm();\r\n  const { Title } = Typography;\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [buses, setBuses] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [mounted, setMounted] = useState(true);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const getDrivers = async () => {\r\n    try {\r\n      setloading(true);\r\n      const response = await DriverApi.getAll();\r\n\r\n      const newResponse = [...response.data].map((driver) => {\r\n        const object = {\r\n          ...driver,\r\n          key: driver._id,\r\n        };\r\n        return object;\r\n      });\r\n\r\n      setDrivers(newResponse);\r\n      setloading(false);\r\n\r\n      console.log(\"newResponse\", response.data);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const updateDriver = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...drivers];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      // console.log(name);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setEditingKey(\"\");\r\n        console.log(\"Newdata\", newData);\r\n        console.log(\"drivers\", drivers);\r\n        console.log(\"index\", index);\r\n        console.log(\"key\", key);\r\n        var { name, phone,assignedBus } = newData[index];\r\n        var  assignedBus  = assignedBus._id\r\n        console.log(\"name,phone,assigndebus\", name, phone, assignedBus);\r\n\r\n        const response = await DriverApi.update(key, {\r\n          name,\r\n          phone,\r\n          assignedBus,\r\n        });\r\n\r\n        if (response) {\r\n          setDisable(false);\r\n          message.success(\"Item updated\");\r\n          getDrivers();\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setDrivers(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (error) {\r\n      setDisable(false);\r\n      message.error(error.message);\r\n\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteDriver = async (key) => {\r\n    try {\r\n      const newData = [...drivers];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      const response = await DriverApi.delete(key);\r\n\r\n      if (response) {\r\n        getDrivers();\r\n        message.warning(\"Item deleted\");\r\n      }\r\n\r\n      newData.splice(index, 1);\r\n\r\n      setDrivers(newData);\r\n      setEditingKey(\"\");\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(\"Validate Failed:\", error);\r\n    }\r\n  };\r\n\r\n  const submitDriver = async (values) => {\r\n    console.log(\"values submit\", values);\r\n    try {\r\n      const response = await DriverApi.create(values);\r\n  console.log(\"responce :\",response)\r\n      if (response) {\r\n        getDrivers();\r\n        message.success(\"Item Added\");\r\n      }\r\n      setDisable(false);\r\n      setVisible(false);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const response = async () => {\r\n      try {\r\n        const myBuses = await BusApi.getAll();\r\n\r\n        setBuses(myBuses.data);\r\n\r\n        getDrivers();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    response();\r\n    getDrivers();\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, [setMounted]);\r\n\r\n  const data = drivers.map((driver) => ({\r\n    _id: driver._id,\r\n    key: driver.key,\r\n    name: driver.name,\r\n    phone: driver.phone,\r\n    // photo: driver.photo,\r\n    assignedBus: driver.assignedBus?.name\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <Title level={2}>Drivers</Title>\r\n      <Button\r\n        style={{\r\n          float: \"right\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        type=\"primary\"\r\n        disabled={disable}\r\n        onClick={() => {\r\n          setVisible(true);\r\n          setDisable(true);\r\n        }}\r\n      >\r\n        Add Item\r\n      </Button>\r\n      {/* <Table bordered columns={columns} dataSource={drivers} /> */}\r\n\r\n      <DriverTable\r\n        data={data}\r\n        loading={loading}\r\n        editingKey={editingKey}\r\n        setEditingKey={setEditingKey}\r\n        deleted={deleteDriver}\r\n        editSave={updateDriver}\r\n        form={form}\r\n        setDisable={setDisable}\r\n        buses={buses}\r\n      />\r\n      <DriverModal\r\n        visible={visible}\r\n        buses={buses}\r\n        onCreate={(values) => submitDriver(values)}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n          setDisable(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Drivers;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\dashboard\\Dashboard.js",["188"],"import { message } from 'antd';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Admin } from '../../../services/api'\r\nimport Statistics from './Statistics';\r\nimport Charts from './Charts';\r\nimport './Dashboard.css'\r\nimport Users from './Users';\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n\r\n\r\n  const [statistics, setStatistics] = useState();\r\n  const [mounted, setMounted] = useState(true);\r\n\r\n\r\n  const getStatistics = async () => {\r\n    try {\r\n\r\n      const response = await Admin.getStatistics();\r\n      const newResponse = response.data;\r\n      console.log(\"newResponse\", newResponse);\r\n      setStatistics(newResponse);\r\n\r\n    } catch (error) {\r\n      message.error(error.message);\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mounted === true) {\r\n      getStatistics();\r\n      console.log('statis', statistics);\r\n    }\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, [setMounted]);\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <body class=\"bg-gradient-primary\">\r\n        <Statistics />\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            <div className='col-7 text-center'>\r\n              <Charts />\r\n            </div>\r\n            <div className='col-5'>\r\n              <Users/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </body>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\drivers\\DriverTable.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\students\\StudentModal.js",["189","190"],"import React, { useState } from \"react\";\r\nimport { Modal, Form, Input, Radio, Upload, message, Button , Select } from \"antd\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst StudentModal = ({ visible, onCreate, onCancel, departments }) => {\r\n  const [form] = Form.useForm();\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const props = {\r\n    name: 'myFile',\r\n    action: 'http://localhost:8080/api/auth/upload',\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    }\r\n  }\r\n\r\n \r\n  const [slipPhoto, SetSlipPhoto] = useState();\r\n\r\n  const handleChange = (e)=>{\r\n    console.log('change',e);\r\n    if(e.file.status == 'done'){\r\n      // set the file url \r\n      alert('uploaded file');\r\n      let imgUrl = e.file.response.file;\r\n      console.log('use', imgUrl)\r\n      if(imgUrl){\r\n        SetSlipPhoto(imgUrl);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  const onSubmit = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        values.slipPhoto = slipPhoto;\r\n        form.resetFields();\r\n        onCreate(values);\r\n      })\r\n      .catch((info) => {\r\n        console.log(\"Validate Failed:\", info);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Add Item\"\r\n      okText=\"Add\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        onSubmit();\r\n      }}\r\n    >\r\n      <Form\r\n        form={form}\r\n        {...layout}\r\n        name=\"student_modal\"\r\n        initialValues={{\r\n          modifier: \"public\",\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input correct email\",\r\n              type: \"email\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input correct password\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"phone\"\r\n          label=\"Phone\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input correct Phone Number\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>{\" \"}\r\n        <Form.Item\r\n          name=\"systemId\"\r\n          label=\"SystemID\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input correct SystemID\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"department\" label=\"department\">\r\n          <Select\r\n            showSearch\r\n            style={{ width: 200 }}\r\n            placeholder=\"Select a Department\"\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {departments.map((department, i) => {\r\n              return (\r\n                <Option key={i} value={department._id}>\r\n                  {department.title}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item\r\n          name=\"sex\"\r\n          label=\"Gender\"\r\n          initialValue=\"Male\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select your Gender\",\r\n            },\r\n          ]}\r\n        >\r\n          <Radio.Group>\r\n            <Radio value=\"Male\">Male</Radio>\r\n            <Radio value=\"Female\">Female</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n        <Upload  {...props}  onChange={(e)=> handleChange(e)}\r\n        data={{name:'testing'}}>\r\n    <Button icon={<UploadOutlined />}>Click to Upload Challan</Button>\r\n  </Upload>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default StudentModal;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\routes\\RouteTable.js",["191","192","193","194","195"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  Select,\r\n  Col, Row,\r\n  message,\r\n} from \"antd\";\r\nimport { EditOutlined, DeleteOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\r\nimport { Option } from \"antd/lib/mentions\";\r\nimport { data } from \"./data\";\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode =\r\n    inputType === \"disabled\" ? (\r\n      <Select defaultValue={record.stops.map((stop) => stop.disabled)}>\r\n        <Option value=\"true\">True</Option>\r\n        <Option value=\"false\">False</Option>\r\n      </Select>\r\n    ) : (\r\n      <Input />\r\n    );\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst RouteTable = ({\r\n  routes,\r\n  loading,\r\n  deleted,\r\n  editingKey,\r\n  setEditingKey,\r\n  editSave,\r\n  form,\r\n  setDisable,\r\n}) => {\r\n  const { Link } = Typography;\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      title: \"\",\r\n      disabled: \"\",\r\n      stops: [],\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n    setDisable(true);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Start Point\",\r\n      dataIndex: \"startPoint\",\r\n      key: \"startPoint\",\r\n      editable: false,\r\n      render: (_, record) =>{\r\n       return <span>\r\n          {record.stops.length >0 ? record?.stops[0].title : ''}\r\n        </span>\r\n      }\r\n    },\r\n    {\r\n      title: \"End Point\",\r\n      dataIndex: \"endPoint\",\r\n      key: \"endPoint\",\r\n      editable: false,\r\n      render: (_, record) =>{\r\n       return <span>\r\n          {record.stops.length >0 ? record?.stops[record.stops.length -1].title : ''}\r\n        </span>\r\n      }\r\n    },\r\n\r\n    {\r\n      title: \"Stops\",\r\n      dataIndex: \"id\",\r\n      key: \"stops\",\r\n      editable: false,\r\n      render: (_, record) => {\r\n        return (\r\n          <Row style={{width:\"10vh\"}}>\r\n            <Col span={12}>\r\n          <Select style={{width:\"30vh\"}}>\r\n            {record.stops.map((rec, i) => {\r\n              return <Option value={rec.title}>{rec.title}</Option>;\r\n            })}\r\n          </Select>\r\n          </Col>\r\n          </Row>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Actions\",\r\n      align: \"center\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Link\r\n              onClick={() => editSave(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </Link>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Link>Cancel</Link>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <EditOutlined\r\n              style={\r\n                editingKey !== \"\"\r\n                  ? {\r\n                      display: \"none\",\r\n                    }\r\n                  : {\r\n                      color: \"blue\",\r\n                    }\r\n              }\r\n              // editingKey !== \"\"\r\n              onClick={() => edit(record)}\r\n            >\r\n              Edit\r\n            </EditOutlined>\r\n            <Popconfirm\r\n              title=\"Are you sure？\"\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n              onConfirm={() => deleted(record.key)}\r\n            >\r\n              {/* <PlayCircleOutlined\r\n                style={\r\n                  editingKey !== \"\"\r\n                    ? {\r\n                        display: \"none\",\r\n                      }\r\n                    : {\r\n                        color: \"green\",\r\n                        marginLeft: \"24px\",\r\n                      }\r\n                }\r\n                disabled={editingKey !== \"\"}\r\n              /> */}\r\n <DeleteOutlined\r\n                style={\r\n                  editingKey !== \"\"\r\n                    ? {\r\n                        display: \"none\",\r\n                      }\r\n                    : {\r\n                        color: \"red\",\r\n                        marginLeft: \"20px\",\r\n                      }\r\n                }\r\n                disabled={editingKey !== \"\"}\r\n              />\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"disabled\" ? \"disabled\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        loading={loading}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={routes}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default RouteTable;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\routes\\RouteModal.js",["196","197","198","199"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Form, Input, Row, Col, Select } from \"antd\";\r\nimport GoogleMap from \"google-map-react\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst K_WIDTH = 40;\r\nconst K_HEIGHT = 40;\r\n\r\nconst greatPlaceStyle = {\r\n  // initially any map object has left top corner at lat lng coordinates\r\n  // it's on you to set object origin to 0,0 coordinates\r\n  position: \"absolute\",\r\n  width: K_WIDTH,\r\n  height: K_HEIGHT,\r\n  left: -K_WIDTH / 2,\r\n  top: -K_HEIGHT / 2,\r\n\r\n  border: \"5px solid green\",\r\n  borderRadius: K_HEIGHT,\r\n  backgroundColor: \"white\",\r\n  textAlign: \"center\",\r\n  color: \"#3f51b5\",\r\n  fontSize: 16,\r\n  fontWeight: \"bold\",\r\n  padding: 4,\r\n};\r\nconst disabledPlaces = {\r\n  // initially any map object has left top corner at lat lng coordinates\r\n  // it's on you to set object origin to 0,0 coordinates\r\n  position: \"absolute\",\r\n  width: K_WIDTH,\r\n  height: K_HEIGHT,\r\n  left: -K_WIDTH / 2,\r\n  top: -K_HEIGHT / 2,\r\n\r\n  border: \"5px solid red\",\r\n  borderRadius: K_HEIGHT,\r\n  backgroundColor: \"white\",\r\n  textAlign: \"center\",\r\n  color: \"#3f51b5\",\r\n  fontSize: 16,\r\n  fontWeight: \"bold\",\r\n  padding: 4,\r\n};\r\n\r\nconst MyGreatPlace = (props) => {\r\n  return <div style={props.disabled == false ? greatPlaceStyle:disabledPlaces} >{props.title}</div>;\r\n};\r\n\r\nconst RouteModal = ({ visible, onCreate, onCancel }) => {\r\n  const [form] = Form.useForm();\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  const onSubmit = () => {\r\n\r\n    console.log('markers' ,markers);\r\n    let response = {\r\n      name: title, \r\n      stops: markers\r\n    }\r\n  \r\n\r\n    onCreate(response);\r\n\r\n    // form\r\n    //   .validateFields()\r\n    //   .then((values) => {\r\n    //     console.log('v',values);\r\n    //     form.resetFields();\r\n    //     onCreate(values);\r\n    //   })\r\n    //   .catch((info) => {\r\n    //     console.log(\"Validate Failed:\", info);\r\n    //   });\r\n  };\r\n\r\n\r\n  const YOUR_GOOGLE_MAP_API_KEY = \"AIzaSyA7jbl5TnQofa0ALQyN6uWXoui92Kw_Otg\";\r\n  const center = [33.738045, 73.084488];\r\n  const zoom = 7;\r\n\r\n  const [title, setTitle] = useState();\r\n  const addMarker = (event)=>{\r\n    let data = {\r\n      title: \"\",\r\n      lat: event.lat || null,\r\n      long: event.lng || null,\r\n      disabled: false,\r\n    };\r\n    markers.push(data);\r\n    console.log('markers', markers);\r\n    setMarkers([...markers])\r\n  }\r\n\r\n\r\n  const setTitleValue = (e,i) =>{\r\n    console.log('word', e.target.value);\r\n    markers[i].title = e.target.value;\r\n    setMarkers([...markers])\r\n  }\r\n\r\n  const setDisabledValue = (e,i) => {\r\n    console.log('e', e);\r\n    markers[i].disabled = e === 'true' ? true : false;\r\n    setMarkers([...markers])\r\n  \r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Create Route\"\r\n      okText=\"Add\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        onSubmit();\r\n      }}\r\n    >\r\n      <div style={{ height: \"20vh\", width: \"100%\" }}>\r\n        <GoogleMap\r\n          apiKey={YOUR_GOOGLE_MAP_API_KEY} // set if you need stats etc ...\r\n          center={center}\r\n          key=\"mapx\"\r\n          zoom={zoom}\r\n          onClick={(event) => addMarker(event)\r\n          }\r\n          // yesIWantToUseGoogleMapApiInternals\r\n          // onGoogleApiLoaded\r\n          // onGoogleApiLoaded={({ map, maps }) => ModelsMap(map, maps)}\r\n        >\r\n          {markers.map((m, indexValue) => (\r\n            <MyGreatPlace lat={m.lat || null} lng={m.long || null} title={indexValue+1 || ''} disabled={m.disabled || false} />\r\n          ))}\r\n        </GoogleMap>\r\n      </div>\r\n\r\n      <div>\r\n      <Row span={12} style={{margin:'10px'}}>\r\n            <Col span={12}>\r\n            <Input placeholder=\"Route Name\" value={title} onChange={(event)=> setTitle(event.target.value)} />\r\n            </Col>\r\n          </Row>\r\n        <h2> Stops </h2>\r\n\r\n        <div>\r\n         \r\n          {markers && markers.map((item, index) => (\r\n            <div className=\"site-input-group-wrapper\">\r\n              <span>Stop {index+1}</span>\r\n              <Input.Group size=\"large\">\r\n                <Row gutter={20}>\r\n                  <Col span={5}>\r\n                    <Input value={item.lat} placeholder=\"Latitude\"  />\r\n                  </Col>\r\n                  <Col span={5}>\r\n                    <Input value={item.long} placeholder=\"Longitude\" />\r\n                  </Col>\r\n                  <Col span={8}>\r\n                    <Input value={markers[index].title} placeholder=\"title\" onChange={($event)=>setTitleValue($event, index)} />\r\n                  </Col>\r\n                  <Col span={3}>\r\n                    <Input.Group compact>\r\n                      <Select defaultValue=\"false\" placeholder=\"Disabled\" onChange={($event) => setDisabledValue($event, index)}>\r\n                        <Option value=\"false\">False</Option>\r\n                        <Option value=\"true\">True</Option>\r\n                      </Select>\r\n                    </Input.Group>\r\n                  </Col>\r\n                </Row>\r\n              </Input.Group>\r\n              <br />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RouteModal;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\supports\\SupportTable.js",["200","201"],"import React from \"react\";\r\nimport { Table, Input, Popconfirm, Form, Typography,Select } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"text\" && <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst SupportTable = ({\r\n  supports,\r\n  loading,\r\n  deleted,\r\n  editingKey,\r\n  setEditingKey,\r\n  editSave,\r\n  form,\r\n  setDisable,\r\n}) => {\r\n  const { Link } = Typography;\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      Title: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n    setDisable(true);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const columns = [\r\n    // {\r\n    //   title: \"Student Name\",\r\n    //   dataIndex: \"studentId\",\r\n    //   key: \"studentId\",\r\n    //   editable: true,\r\n    //   render: (_, record) => {\r\n    //     return <div>\r\n    //       {record.title}\r\n    //     </div>\r\n    //   }\r\n    // },\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Message\",\r\n      dataIndex: \"message\",\r\n      key: \"message\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      editable: true,\r\n      render: (_,record)=>{\r\n        return (\r\n          <div> {String(record.status)}</div>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      align: \"center\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Link\r\n              onClick={() => editSave(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </Link>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Link>Cancel</Link>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <EditOutlined\r\n              style={\r\n                editingKey !== \"\"\r\n                  ? {\r\n                      display: \"none\",\r\n                    }\r\n                  : {\r\n                      color: \"blue\",\r\n                    }\r\n              }\r\n              // editingKey !== \"\"\r\n              onClick={() => edit(record)}\r\n            >\r\n              Edit\r\n            </EditOutlined>\r\n            <Popconfirm\r\n              title=\"Are you sure？\"\r\n              okText=\"Yes\"\r\n              // onConfirm={}\r\n              cancelText=\"No\"\r\n              onConfirm={() => deleted(record.key)}\r\n            >\r\n              <DeleteOutlined\r\n                style={\r\n                  editingKey !== \"\"\r\n                    ? {\r\n                        display: \"none\",\r\n                      }\r\n                    : {\r\n                        color: \"red\",\r\n                        marginLeft: \"20px\",\r\n                      }\r\n                }\r\n                disabled={editingKey !== \"\"}\r\n              />\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType:\r\n            col.dataIndex == \"status\" ? (\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Status\"\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                    <Option key={'status1'} value={'true'}>\r\n                      True\r\n                    </Option>\r\n                    <Option key={'status2'} value={'false'}>\r\n                      False\r\n                    </Option>\r\n              </Select>\r\n            )   : <Input />,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        loading={loading}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={supports}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SupportTable;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\supports\\SupportModal.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\students\\StudentTable.js",["202"],"import React from \"react\";\r\nimport { Table, Input, Popconfirm, Form, Typography, Image, Select } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nconst { Option } = Select;\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst StudentTable = ({\r\n  students,\r\n  loading,\r\n  deleted,\r\n  editingKey,\r\n  setEditingKey,\r\n  editSave,\r\n  form,\r\n  setDisable,\r\n}) => {\r\n  const { Link } = Typography;\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      phone: \"\",\r\n      systemId: \"\",\r\n      sex: \"\",\r\n      slipPhoto:\"\",\r\n      slipVerified:null,\r\n      verified:null, \r\n      department:'',\r\n      // assignedBus,\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n    setDisable(true);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"SystemId\",\r\n      dataIndex: \"systemId\",\r\n      key: \"systemId\",\r\n      defaultSortOrder: 'descend'\r\n    },\r\n     {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      editable: true,\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      editable: false,\r\n      sorter: (a, b) => a.email.length - b.email.length,\r\n\r\n    },\r\n    // {\r\n    //   title: \"Password\",\r\n    //   dataIndex: \"password\",\r\n    //   key: \"password\",\r\n    //   editable: true,\r\n    //   sorter: (a, b) => a.password.length - b.password.length,\r\n\r\n    // },\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"phone\",\r\n      key: \"phone\",\r\n      editable: true,\r\n      sorter: (a, b) => a.phone.length - b.phone.length,\r\n\r\n    },\r\n    {\r\n      title: \"Department\",\r\n      dataIndex: \"department\",\r\n      key: \"department\",\r\n      sorter: (a, b) => a.department.length - b.department.length,\r\n      render: (_,record) =>{\r\n        return <div>{record. department ? record.department.title :''}</div>\r\n      }\r\n    },\r\n    \r\n    {\r\n      title: \"Slip Photo\",\r\n      dataIndex: \"slipPhoto\",\r\n      key: \"slipPhoto\",\r\n      sorter: (a, b) => a.slipPhoto.length - b.slipPhoto.length,\r\n\r\n      render: (_,record) =>{\r\n        return  <Image\r\n        width={200}\r\n        src={record.slipPhoto || \"https://www.wkbn.com/wp-content/uploads/sites/48/2020/06/missing-generic.jpg\"}\r\n      />\r\n      },\r\n\r\n    },\r\n    {\r\n      title: \"slipVerified\",\r\n      dataIndex: \"slipVerified\",\r\n      key: \"slipVerified\",\r\n      sorter: (a, b) => (a === b)? 0 : a? -1 : 1,\r\n      editable: true,\r\n      render: (_,record) =>{\r\n        return <span>{String(record.slipVerified)} </span>\r\n      }\r\n    },\r\n    // {\r\n    //   title: \"Account Status\",\r\n    //   dataIndex: \"verified\",\r\n    //   key: \"verified\",\r\n    //   editable: true,\r\n    //   render: (_,record) =>{\r\n    //     return <span>{String(record.verified)} </span>\r\n    //   }\r\n    // },\r\n    {\r\n      title: \"Actions\",\r\n      align: \"center\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Link\r\n              onClick={() => { \r\n                editSave(record.key)}\r\n              }\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </Link>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Link>Cancel</Link>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <EditOutlined\r\n              style={\r\n                editingKey !== \"\"\r\n                  ? {\r\n                      display: \"none\",\r\n                    }\r\n                  : {\r\n                      color: \"blue\",\r\n                    }\r\n              }\r\n              // editingKey !== \"\"\r\n              onClick={() => edit(record)}\r\n            >\r\n              Edit\r\n            </EditOutlined>\r\n            <Popconfirm\r\n              title=\"Are you sure？\"\r\n              okText=\"Yes\"\r\n              // onConfirm={}\r\n              cancelText=\"No\"\r\n              onConfirm={() => deleted(record.key)}\r\n            >\r\n              <DeleteOutlined\r\n                style={\r\n                  editingKey !== \"\"\r\n                    ? {\r\n                        display: \"none\",\r\n                      }\r\n                    : {\r\n                        color: \"red\",\r\n                        marginLeft: \"20px\",\r\n                      }\r\n                }\r\n                disabled={editingKey !== \"\"}\r\n              />\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType:\r\n            col.dataIndex === \"slipVerified\" ? (\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Status\"\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                    <Option key={'slipVerified'} value={'true'}>\r\n                      True\r\n                    </Option>\r\n                    <Option key={'slipVerified2'} value={'false'}>\r\n                      False\r\n                    </Option>\r\n              </Select>\r\n            )   : \r\n            col.dataIndex === \"verified\" ? (\r\n              <Select\r\n                style={{ width: 200 }}\r\n                placeholder=\"Account Status\"\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                    <Option key={'verified1'} value={'true'}>\r\n                      True\r\n                    </Option>\r\n                    <Option key={'verifiedd2'} value={'false'}>\r\n                      False\r\n                    </Option>\r\n              </Select>\r\n            )   : \r\n            <Input />\r\n            ,\r\n            dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        loading={loading}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={students}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default StudentTable;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\departments\\DepartmentTable.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\drivers\\DriverModal.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\departments\\DepartmentModal.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\buses\\BusTable.js",["203"],"import React, { useState } from \"react\";\r\nimport { Table, Input, Popconfirm, Form, Typography, Select } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  rotues,\r\n  drivers,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        \r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst BusTable = ({\r\n  data,\r\n  routes,\r\n  drivers,\r\n  loading,\r\n  deleted,\r\n  editingKey,\r\n  setEditingKey,\r\n  editSave,\r\n  form,\r\n  setDisable,\r\n}) => {\r\n  const { Link } = Typography;\r\n  const { Option } = Select;\r\n  const [ID, setID] = useState(\"\");\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      capacity: Number,\r\n      assignedRoute: {},\r\n      assignedDriver: {},\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n    setDisable(true);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const columns = [\r\n    \r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      editable: true,\r\n      sorter: (a, b) => a.name.length - b.name.length\r\n      \r\n\r\n    },\r\n    {\r\n      title: \"Capacity\",\r\n      dataIndex: \"capacity\",\r\n      key: \"capacity\",\r\n      editable: true,\r\n      sorter: (a, b) => a.capacity - b.capacity\r\n\r\n    },\r\n    {\r\n      title: \"AssignedRoute\",\r\n      dataIndex: \"assignedRoute\",\r\n      key: \"assignedRoute\",\r\n      editable: true,\r\n      sorter: (a, b) => a.assignedRoute.length - b.assignedRoute.length,\r\n      render: (_, record) => {\r\n        return record.assignedRoute_ID;\r\n      },\r\n    },\r\n    {\r\n      title: \"AssignedDriver\",\r\n      dataIndex: \"assignedDriver\",\r\n      key: \"assignedDriver\",\r\n      editable: true,\r\n      render: (_, record) => {\r\n        return record.assignedDriver_ID;\r\n      },\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      align: \"center\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Link\r\n              onClick={() => editSave(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </Link>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Link>Cancel</Link>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <EditOutlined\r\n              style={\r\n                editingKey !== \"\"\r\n                  ? {\r\n                      display: \"none\",\r\n                    }\r\n                  : {\r\n                      color: \"blue\",\r\n                    }\r\n              }\r\n              onClick={() => edit(record)}\r\n            >\r\n              Edit\r\n            </EditOutlined>\r\n            <Popconfirm\r\n              title=\"Are you sure？\"\r\n              okText=\"Yes\"\r\n              // onConfirm={}\r\n              cancelText=\"No\"\r\n              onConfirm={() => deleted(record.key)}\r\n            >\r\n              <DeleteOutlined\r\n                style={\r\n                  editingKey !== \"\"\r\n                    ? {\r\n                        display: \"none\",\r\n                      }\r\n                    : {\r\n                        color: \"red\",\r\n                        marginLeft: \"20px\",\r\n                      }\r\n                }\r\n                disabled={editingKey !== \"\"}\r\n              />\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n    return {\r\n      ...col,\r\n      onCell: (record) => {\r\n        return {\r\n          record: data,\r\n          inputType:\r\n            col.dataIndex === \"assignedDriver\" ? (\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select a Driver\"\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n              >\r\n                {drivers.map((driver, i) => {\r\n                  setID(driver._id);\r\n                  return (\r\n                    <Option key={i} value={driver._id}>\r\n                      {driver.name}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            ) : col.dataIndex === \"assignedRoute\" ? (\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n              >\r\n                {routes.map((route, i) => {\r\n                  return (\r\n                    <Option key={i} value={route._id}>\r\n                      {route.name}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            ) : (\r\n              <Input />\r\n            ),\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: isEditing(record),\r\n        };\r\n      },\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      {/* <h1 style={{textAlign:'center', padding:\"10px 0px\",fontWeight:\"bolder\", backgroundColor:'rgba(0, 0, 0, 0.7)',color:'white'}}>\r\n        Buses</h1> */}\r\n    <Form form={form}  component={false}>\r\n      <Table\r\n     \r\n        loading={loading}\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n        \r\n      />\r\n    </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusTable;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\buses\\BusModal.js",["204","205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Form, Input, Select, InputNumber } from \"antd\";\r\nimport { Route } from \"react-router\";\r\n\r\nconst BusModal = ({\r\n  visible,\r\n  onCreate,\r\n  onCancel,\r\n  routes,\r\n  drivers,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const { Option } = Select;\r\n\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        form.resetFields();\r\n        onCreate(values);\r\n      })\r\n      .catch((info) => {\r\n        console.log(\"Validate Failed:\", info);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Add Item\"\r\n      okText=\"Add\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        onSubmit();\r\n      }}\r\n    >\r\n      <Form\r\n        form={form}\r\n        {...layout}\r\n        name=\"bus_modal\"\r\n        initialValues={{\r\n          modifier: \"public\",\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input the name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"capacity\"\r\n          label=\"Capacity\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input the capacity number !\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        {/*  */}\r\n        <Form.Item name=\"assignedRoute\" label=\"AssignedRoute\">\r\n          <Select\r\n            showSearch\r\n            style={{ width: 200 }}\r\n            placeholder=\"Select a Route\"\r\n            onSearch={() => {}}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {routes.map((route, i) => {\r\n              return (\r\n                <Option key={i} value={route._id}>\r\n                  {route.name}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item name=\"assignedDriver\" label=\"AssignedDriver\">\r\n          <Select\r\n            showSearch\r\n            style={{ width: 200 }}\r\n            placeholder=\"Select a Driver\"\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {drivers.map((driver, i) => {\r\n              return (\r\n                <Option key={i} value={driver._id}>\r\n                  {driver.name}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default BusModal;\r\n","C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\routes\\data.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\dashboard\\Statistics.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\dashboard\\Charts.js",[],"C:\\Users\\Abrar khan Zargai\\Desktop\\Shop Mangment system\\Dashboard--\\src\\pages\\dashboard\\dashboard\\Users.js",["207","208","209"],"import React, { useEffect } from 'react'\r\nimport { List, message, Avatar, Spin } from 'antd';\r\n\r\n\r\nfunction Users() {\r\n    const UserRecord = [\r\n        {id:1, name: \"Muhammad Ali\", email: \"ali@gmail.com\" },\r\n        { id: 2, name: \"Tayyab Raza\", email: \"tabi@gmail.com\" },\r\n        { id: 3, name: \"Shoaib Imran\", email: \"shoaib@gmail.com\" }\r\n    ]\r\n    useEffect(() => {\r\n       console.log(\"hit\")\r\n    });\r\n   \r\n    return (\r\n        <div class=\"main-content  mt-4\">\r\n\r\n            <div class=\"container-fluid\">\r\n                <h2 class=\"mb-2 text-white text-center\">Users</h2>\r\n                <div class=\"header-body mt-1 \">\r\n                    <div class=\"row\">\r\n                        {UserRecord ?\r\n                            (\r\n                                <><div class=\"col-xl-12 col-lg-12 my-2\">\r\n                                    <div class=\"card card-stats mb-4 mb-xl-0\">\r\n                                        <div class=\"card-body\">\r\n                                    <div className=\"demo-infinite-container\">\r\n                                       \r\n                                            <List\r\n                                                dataSource={UserRecord}\r\n                                                renderItem={item => (\r\n                                                    <List.Item >\r\n                                                        <List.Item.Meta\r\n                                                            avatar={\r\n                                                                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                                            }\r\n                                                            title={<h6 >{item.name}</h6>}\r\n                                                            description={item.email}\r\n                                                        />\r\n                                                        <div>Content</div>\r\n                                                    </List.Item>\r\n                                                )}\r\n                                            >\r\n                                              \r\n                                            </List>\r\n                                       \r\n                                    </div>  \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                              </>) : (\r\n                                <>\r\n                                    <div class=\"col-xl-12 col-lg-12 my-2\">\r\n                                        <div class=\"card card-stats mb-4 mb-xl-0\">\r\n                                            <div class=\"card-body\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col\">\r\n                                                        <h5 class=\"card-title text-uppercase text-muted mb-0\"></h5>\r\n                                                        <span class=\"h2 font-weight-bold mb-0\">No User Found</span>\r\n                                                    </div>\r\n                                                    <div class=\"col-auto\">\r\n                                                        <div class=\"icon icon-shape bg-danger text-white rounded-circle shadow p-2\">\r\n                                                            <i class=\"fas fa-users fa-2x \"></i>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                        }\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n",{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":2,"column":25,"nodeType":"216","messageId":"217","endLine":2,"endColumn":33},{"ruleId":"214","severity":1,"message":"218","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":14},{"ruleId":"214","severity":1,"message":"219","line":1,"column":16,"nodeType":"216","messageId":"217","endLine":1,"endColumn":21},{"ruleId":"214","severity":1,"message":"220","line":1,"column":23,"nodeType":"216","messageId":"217","endLine":1,"endColumn":29},{"ruleId":"214","severity":1,"message":"221","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":15},{"ruleId":"214","severity":1,"message":"222","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":12},{"ruleId":"214","severity":1,"message":"222","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":12},{"ruleId":"214","severity":1,"message":"223","line":10,"column":9,"nodeType":"216","messageId":"217","endLine":10,"endColumn":15},{"ruleId":"214","severity":1,"message":"224","line":5,"column":3,"nodeType":"216","messageId":"217","endLine":5,"endColumn":12},{"ruleId":"214","severity":1,"message":"225","line":6,"column":3,"nodeType":"216","messageId":"217","endLine":6,"endColumn":20},{"ruleId":"226","severity":1,"message":"227","line":62,"column":11,"nodeType":"228","endLine":62,"endColumn":62},{"ruleId":"214","severity":1,"message":"221","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":13},{"ruleId":"214","severity":1,"message":"229","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":20},{"ruleId":"214","severity":1,"message":"230","line":9,"column":11,"nodeType":"216","messageId":"217","endLine":9,"endColumn":16},{"ruleId":"214","severity":1,"message":"231","line":16,"column":10,"nodeType":"216","messageId":"217","endLine":16,"endColumn":17},{"ruleId":"232","severity":1,"message":"233","line":141,"column":6,"nodeType":"234","endLine":141,"endColumn":8,"suggestions":"235"},{"ruleId":"232","severity":1,"message":"236","line":122,"column":6,"nodeType":"234","endLine":122,"endColumn":18,"suggestions":"237"},{"ruleId":"214","severity":1,"message":"220","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"238","line":11,"column":10,"nodeType":"216","messageId":"217","endLine":11,"endColumn":17},{"ruleId":"232","severity":1,"message":"236","line":125,"column":6,"nodeType":"234","endLine":125,"endColumn":18,"suggestions":"239"},{"ruleId":"232","severity":1,"message":"236","line":135,"column":6,"nodeType":"234","endLine":135,"endColumn":18,"suggestions":"240"},{"ruleId":"214","severity":1,"message":"241","line":137,"column":9,"nodeType":"216","messageId":"217","endLine":137,"endColumn":13},{"ruleId":"232","severity":1,"message":"236","line":135,"column":6,"nodeType":"234","endLine":135,"endColumn":18,"suggestions":"242"},{"ruleId":"214","severity":1,"message":"241","line":137,"column":9,"nodeType":"216","messageId":"217","endLine":137,"endColumn":13},{"ruleId":"232","severity":1,"message":"236","line":134,"column":6,"nodeType":"234","endLine":134,"endColumn":18,"suggestions":"243"},{"ruleId":"214","severity":1,"message":"231","line":14,"column":10,"nodeType":"216","messageId":"217","endLine":14,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":57,"column":14,"nodeType":"216","messageId":"246","endLine":57,"endColumn":25},{"ruleId":"232","severity":1,"message":"247","line":40,"column":6,"nodeType":"234","endLine":40,"endColumn":18,"suggestions":"248"},{"ruleId":"214","severity":1,"message":"249","line":2,"column":45,"nodeType":"216","messageId":"217","endLine":2,"endColumn":52},{"ruleId":"250","severity":1,"message":"251","line":28,"column":22,"nodeType":"252","messageId":"253","endLine":28,"endColumn":24},{"ruleId":"214","severity":1,"message":"254","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"255","line":1,"column":28,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"249","line":10,"column":3,"nodeType":"216","messageId":"217","endLine":10,"endColumn":10},{"ruleId":"214","severity":1,"message":"256","line":12,"column":40,"nodeType":"216","messageId":"217","endLine":12,"endColumn":58},{"ruleId":"214","severity":1,"message":"257","line":14,"column":10,"nodeType":"216","messageId":"217","endLine":14,"endColumn":14},{"ruleId":"214","severity":1,"message":"254","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"250","severity":1,"message":"251","line":49,"column":37,"nodeType":"252","messageId":"253","endLine":49,"endColumn":39},{"ruleId":"214","severity":1,"message":"258","line":53,"column":10,"nodeType":"216","messageId":"217","endLine":53,"endColumn":14},{"ruleId":"214","severity":1,"message":"259","line":54,"column":9,"nodeType":"216","messageId":"217","endLine":54,"endColumn":15},{"ruleId":"214","severity":1,"message":"260","line":7,"column":9,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":181,"column":27,"nodeType":"252","messageId":"253","endLine":181,"endColumn":29},{"ruleId":"261","severity":1,"message":"262","line":124,"column":22,"nodeType":"263","messageId":"264","endLine":124,"endColumn":40,"fix":"265"},{"ruleId":"214","severity":1,"message":"266","line":58,"column":10,"nodeType":"216","messageId":"217","endLine":58,"endColumn":12},{"ruleId":"214","severity":1,"message":"254","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"255","line":1,"column":28,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"267","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":15},{"ruleId":"214","severity":1,"message":"249","line":2,"column":16,"nodeType":"216","messageId":"217","endLine":2,"endColumn":23},{"ruleId":"214","severity":1,"message":"268","line":2,"column":33,"nodeType":"216","messageId":"217","endLine":2,"endColumn":37},{"ruleId":"269","severity":1,"message":"270","line":58,"column":57,"nodeType":"228","endLine":58,"endColumn":111},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Admin' is defined but never used.","'numl' is defined but never used.","'Header' is assigned a value but never used.","'CarFilled' is defined but never used.","'EnvironmentFilled' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RouteDetails' is defined but never used.","'Title' is assigned a value but never used.","'mounted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBuses'. Either include it or remove the dependency array.","ArrayExpression",["273"],"React Hook useEffect has a missing dependency: 'mounted'. Either include it or remove the dependency array.",["274"],"'disable' is assigned a value but never used.",["275"],["276"],"'data' is assigned a value but never used.",["277"],["278"],"no-redeclare","'assignedBus' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'mounted' and 'statistics'. Either include them or remove the dependency array.",["279"],"'message' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","'PlayCircleOutlined' is defined but never used.","'data' is defined but never used.","'form' is assigned a value but never used.","'layout' is assigned a value but never used.","'TextArea' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property department.","MemberExpression","unexpectedWhitespace",{"range":"280","text":"281"},"'ID' is assigned a value but never used.","'Route' is defined but never used.","'Spin' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"284","fix":"286"},{"desc":"284","fix":"287"},{"desc":"284","fix":"288"},{"desc":"284","fix":"289"},{"desc":"290","fix":"291"},[2573,2575],".","Update the dependencies array to be: [getBuses]",{"range":"292","text":"293"},"Update the dependencies array to be: [mounted, setMounted]",{"range":"294","text":"295"},{"range":"296","text":"295"},{"range":"297","text":"295"},{"range":"298","text":"295"},{"range":"299","text":"295"},"Update the dependencies array to be: [mounted, setMounted, statistics]",{"range":"300","text":"301"},[3834,3836],"[getBuses]",[3306,3318],"[mounted, setMounted]",[3323,3335],[3465,3477],[3543,3555],[3933,3945],[916,928],"[mounted, setMounted, statistics]"]